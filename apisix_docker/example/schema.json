{
	"main": {
		"plugins": {
			"items": {
				"properties": {
					"stream": { "type": "boolean" },
					"additionalProperties": false,
					"name": { "minLength": 1, "type": "string" }
				},
				"required": ["name"],
				"type": "object"
			},
			"type": "array"
		},
		"plugin_config": {
			"properties": {
				"id": {
					"anyOf": [
						{
							"pattern": "^[a-zA-Z0-9-_.]+$",
							"maxLength": 64,
							"minLength": 1,
							"type": "string"
						},
						{ "minimum": 1, "type": "integer" }
					]
				},
				"plugins": { "type": "object" },
				"create_time": { "type": "integer" },
				"desc": { "maxLength": 256, "type": "string" },
				"labels": {
					"description": "key/value pairs to specify attributes",
					"patternProperties": {
						".*": {
							"minLength": 1,
							"maxLength": 256,
							"type": "string",
							"pattern": "^\\S+$",
							"description": "value of label"
						}
					},
					"type": "object"
				},
				"update_time": { "type": "integer" }
			},
			"required": ["id", "plugins"],
			"additionalProperties": false,
			"type": "object"
		},
		"consumer": {
			"properties": {
				"plugins": { "type": "object" },
				"username": {
					"pattern": "^[a-zA-Z0-9_]+$",
					"maxLength": 100,
					"minLength": 1,
					"type": "string"
				},
				"create_time": { "type": "integer" },
				"desc": { "maxLength": 256, "type": "string" },
				"labels": {
					"description": "key/value pairs to specify attributes",
					"patternProperties": {
						".*": {
							"minLength": 1,
							"maxLength": 256,
							"type": "string",
							"pattern": "^\\S+$",
							"description": "value of label"
						}
					},
					"type": "object"
				},
				"group_id": {
					"anyOf": [
						{
							"pattern": "^[a-zA-Z0-9-_.]+$",
							"maxLength": 64,
							"minLength": 1,
							"type": "string"
						},
						{ "minimum": 1, "type": "integer" }
					]
				},
				"update_time": { "type": "integer" }
			},
			"required": ["username"],
			"additionalProperties": false,
			"type": "object"
		},
		"upstream_hash_vars_schema": {
			"pattern": "^((uri|server_name|server_addr|request_uri|remote_port|remote_addr|query_string|host|hostname|mqtt_client_id)|arg_[0-9a-zA-z_-]+)$",
			"type": "string"
		},
		"global_rule": {
			"properties": {
				"id": {
					"anyOf": [
						{
							"pattern": "^[a-zA-Z0-9-_.]+$",
							"maxLength": 64,
							"minLength": 1,
							"type": "string"
						},
						{ "minimum": 1, "type": "integer" }
					]
				},
				"plugins": { "type": "object" },
				"update_time": { "type": "integer" },
				"create_time": { "type": "integer" }
			},
			"required": ["id", "plugins"],
			"additionalProperties": false,
			"type": "object"
		},
		"service": {
			"properties": {
				"id": {
					"anyOf": [
						{
							"pattern": "^[a-zA-Z0-9-_.]+$",
							"maxLength": 64,
							"minLength": 1,
							"type": "string"
						},
						{ "minimum": 1, "type": "integer" }
					]
				},
				"plugins": { "type": "object" },
				"script": { "maxLength": 102400, "minLength": 10, "type": "string" },
				"name": { "type": "string", "minLength": 1, "maxLength": 100 },
				"desc": { "maxLength": 256, "type": "string" },
				"upstream": {
					"properties": {
						"id": {
							"anyOf": [
								{
									"pattern": "^[a-zA-Z0-9-_.]+$",
									"maxLength": 64,
									"minLength": 1,
									"type": "string"
								},
								{ "minimum": 1, "type": "integer" }
							]
						},
						"keepalive_pool": {
							"properties": {
								"idle_timeout": {
									"default": 60,
									"minimum": 0,
									"type": "number"
								},
								"requests": {
									"default": 1000,
									"minimum": 1,
									"type": "integer"
								},
								"size": { "default": 320, "minimum": 1, "type": "integer" }
							},
							"type": "object"
						},
						"create_time": { "type": "integer" },
						"retries": { "minimum": 0, "type": "integer" },
						"retry_timeout": { "minimum": 0, "type": "number" },
						"tls": {
							"properties": {
								"client_key": {
									"maxLength": 65536,
									"minLength": 128,
									"type": "string"
								},
								"verify": {
									"default": false,
									"type": "boolean",
									"description": "Turn on server certificate verification, currently only kafka upstream is supported"
								},
								"client_cert": {
									"maxLength": 65536,
									"minLength": 128,
									"type": "string"
								},
								"client_cert_id": {
									"anyOf": [
										{
											"pattern": "^[a-zA-Z0-9-_.]+$",
											"maxLength": 64,
											"minLength": 1,
											"type": "string"
										},
										{ "minimum": 1, "type": "integer" }
									]
								}
							},
							"dependencies": {
								"client_cert_id": {
									"not": { "required": ["client_client", "client_key"] }
								},
								"client_cert": {
									"not": { "required": ["client_cert_id"] },
									"required": ["client_key"]
								},
								"client_key": {
									"not": { "required": ["client_cert_id"] },
									"required": ["client_cert"]
								}
							},
							"type": "object"
						},
						"checks": {
							"properties": {
								"passive": {
									"properties": {
										"healthy": {
											"properties": {
												"successes": {
													"minimum": 0,
													"default": 5,
													"maximum": 254,
													"type": "integer"
												},
												"http_statuses": {
													"items": {
														"minimum": 200,
														"maximum": 599,
														"type": "integer"
													},
													"uniqueItems": true,
													"default": [
														200, 201, 202, 203, 204, 205, 206, 207, 208, 226,
														300, 301, 302, 303, 304, 305, 306, 307, 308
													],
													"minItems": 1,
													"type": "array"
												}
											},
											"type": "object"
										},
										"unhealthy": {
											"properties": {
												"timeouts": {
													"minimum": 0,
													"default": 7,
													"maximum": 254,
													"type": "integer"
												},
												"http_failures": {
													"minimum": 0,
													"default": 5,
													"maximum": 254,
													"type": "integer"
												},
												"tcp_failures": {
													"minimum": 0,
													"default": 2,
													"maximum": 254,
													"type": "integer"
												},
												"http_statuses": {
													"items": {
														"minimum": 200,
														"maximum": 599,
														"type": "integer"
													},
													"uniqueItems": true,
													"default": [429, 500, 503],
													"minItems": 1,
													"type": "array"
												}
											},
											"type": "object"
										},
										"type": {
											"default": "http",
											"enum": ["http", "https", "tcp"],
											"type": "string"
										}
									},
									"type": "object"
								},
								"active": {
									"properties": {
										"concurrency": { "default": 10, "type": "integer" },
										"http_path": { "default": "/", "type": "string" },
										"https_verify_certificate": {
											"default": true,
											"type": "boolean"
										},
										"type": {
											"default": "http",
											"enum": ["http", "https", "tcp"],
											"type": "string"
										},
										"timeout": { "default": 1, "type": "number" },
										"req_headers": {
											"items": { "uniqueItems": true, "type": "string" },
											"minItems": 1,
											"type": "array"
										},
										"healthy": {
											"properties": {
												"successes": {
													"minimum": 1,
													"default": 2,
													"maximum": 254,
													"type": "integer"
												},
												"interval": {
													"minimum": 1,
													"default": 1,
													"type": "integer"
												},
												"http_statuses": {
													"items": {
														"minimum": 200,
														"maximum": 599,
														"type": "integer"
													},
													"uniqueItems": true,
													"default": [200, 302],
													"minItems": 1,
													"type": "array"
												}
											},
											"type": "object"
										},
										"port": {
											"minimum": 1,
											"maximum": 65535,
											"type": "integer"
										},
										"unhealthy": {
											"properties": {
												"http_statuses": {
													"items": {
														"minimum": 200,
														"maximum": 599,
														"type": "integer"
													},
													"uniqueItems": true,
													"default": [429, 404, 500, 501, 502, 503, 504, 505],
													"minItems": 1,
													"type": "array"
												},
												"interval": {
													"minimum": 1,
													"default": 1,
													"type": "integer"
												},
												"http_failures": {
													"minimum": 1,
													"default": 5,
													"maximum": 254,
													"type": "integer"
												},
												"tcp_failures": {
													"minimum": 1,
													"default": 2,
													"maximum": 254,
													"type": "integer"
												},
												"timeouts": {
													"minimum": 1,
													"default": 3,
													"maximum": 254,
													"type": "integer"
												}
											},
											"type": "object"
										},
										"host": {
											"pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
											"type": "string"
										}
									},
									"type": "object"
								}
							},
							"additionalProperties": false,
							"anyOf": [
								{ "required": ["active"] },
								{ "required": ["active", "passive"] }
							],
							"type": "object"
						},
						"timeout": {
							"properties": {
								"send": { "exclusiveMinimum": 0, "type": "number" },
								"read": { "exclusiveMinimum": 0, "type": "number" },
								"connect": { "exclusiveMinimum": 0, "type": "number" }
							},
							"required": ["connect", "send", "read"],
							"type": "object"
						},
						"discovery_type": {
							"type": "string",
							"description": "discovery type"
						},
						"labels": {
							"description": "key/value pairs to specify attributes",
							"patternProperties": {
								".*": {
									"minLength": 1,
									"maxLength": 256,
									"type": "string",
									"pattern": "^\\S+$",
									"description": "value of label"
								}
							},
							"type": "object"
						},
						"discovery_args": {
							"properties": {
								"group_name": { "type": "string", "description": "group name" },
								"namespace_id": {
									"type": "string",
									"description": "namespace id"
								}
							},
							"type": "object"
						},
						"key": {
							"type": "string",
							"description": "the key of chash for dynamic load balancing"
						},
						"name": { "type": "string", "minLength": 1, "maxLength": 100 },
						"desc": { "maxLength": 256, "type": "string" },
						"update_time": { "type": "integer" },
						"type": {
							"default": "roundrobin",
							"description": "algorithms of load balancing",
							"type": "string"
						},
						"upstream_host": {
							"pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
							"type": "string"
						},
						"pass_host": {
							"default": "pass",
							"description": "mod of host passing",
							"enum": ["pass", "node", "rewrite"],
							"type": "string"
						},
						"hash_on": {
							"default": "vars",
							"enum": [
								"vars",
								"header",
								"cookie",
								"consumer",
								"vars_combinations"
							],
							"type": "string"
						},
						"nodes": {
							"anyOf": [
								{
									"patternProperties": {
										".*": {
											"minimum": 0,
											"description": "weight of node",
											"type": "integer"
										}
									},
									"type": "object"
								},
								{
									"items": {
										"properties": {
											"host": {
												"pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
												"type": "string"
											},
											"weight": {
												"minimum": 0,
												"description": "weight of node",
												"type": "integer"
											},
											"metadata": {
												"type": "object",
												"description": "metadata of node"
											},
											"port": {
												"minimum": 1,
												"description": "port of node",
												"type": "integer"
											},
											"priority": {
												"default": 0,
												"description": "priority of node",
												"type": "integer"
											}
										},
										"required": ["host", "port", "weight"],
										"type": "object"
									},
									"type": "array"
								}
							]
						},
						"service_name": {
							"type": "string",
							"minLength": 1,
							"maxLength": 256
						},
						"scheme": {
							"default": "http",
							"enum": [
								"grpc",
								"grpcs",
								"http",
								"https",
								"tcp",
								"tls",
								"udp",
								"kafka"
							],
							"description": "The scheme of the upstream. For L7 proxy, it can be one of grpc/grpcs/http/https. For L4 proxy, it can be one of tcp/tls/udp. For specific protocols, it can be kafka."
						}
					},
					"additionalProperties": false,
					"oneOf": [
						{ "required": ["nodes"] },
						{ "required": ["service_name", "discovery_type"] }
					],
					"type": "object"
				},
				"update_time": { "type": "integer" },
				"enable_websocket": {
					"type": "boolean",
					"description": "enable websocket for request"
				},
				"upstream_id": {
					"anyOf": [
						{
							"pattern": "^[a-zA-Z0-9-_.]+$",
							"maxLength": 64,
							"minLength": 1,
							"type": "string"
						},
						{ "minimum": 1, "type": "integer" }
					]
				},
				"labels": {
					"description": "key/value pairs to specify attributes",
					"patternProperties": {
						".*": {
							"minLength": 1,
							"maxLength": 256,
							"type": "string",
							"pattern": "^\\S+$",
							"description": "value of label"
						}
					},
					"type": "object"
				},
				"hosts": {
					"uniqueItems": true,
					"items": {
						"pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
						"type": "string"
					},
					"minItems": 1,
					"type": "array"
				},
				"create_time": { "type": "integer" }
			},
			"additionalProperties": false,
			"type": "object"
		},
		"upstream_hash_header_schema": {
			"pattern": "^[a-zA-Z0-9-_]+$",
			"type": "string"
		},
		"upstream": {
			"properties": {
				"id": {
					"anyOf": [
						{
							"pattern": "^[a-zA-Z0-9-_.]+$",
							"maxLength": 64,
							"minLength": 1,
							"type": "string"
						},
						{ "minimum": 1, "type": "integer" }
					]
				},
				"keepalive_pool": {
					"properties": {
						"idle_timeout": { "default": 60, "minimum": 0, "type": "number" },
						"requests": { "default": 1000, "minimum": 1, "type": "integer" },
						"size": { "default": 320, "minimum": 1, "type": "integer" }
					},
					"type": "object"
				},
				"create_time": { "type": "integer" },
				"retries": { "minimum": 0, "type": "integer" },
				"retry_timeout": { "minimum": 0, "type": "number" },
				"tls": {
					"properties": {
						"client_key": {
							"maxLength": 65536,
							"minLength": 128,
							"type": "string"
						},
						"verify": {
							"default": false,
							"type": "boolean",
							"description": "Turn on server certificate verification, currently only kafka upstream is supported"
						},
						"client_cert": {
							"maxLength": 65536,
							"minLength": 128,
							"type": "string"
						},
						"client_cert_id": {
							"anyOf": [
								{
									"pattern": "^[a-zA-Z0-9-_.]+$",
									"maxLength": 64,
									"minLength": 1,
									"type": "string"
								},
								{ "minimum": 1, "type": "integer" }
							]
						}
					},
					"dependencies": {
						"client_cert_id": {
							"not": { "required": ["client_client", "client_key"] }
						},
						"client_cert": {
							"not": { "required": ["client_cert_id"] },
							"required": ["client_key"]
						},
						"client_key": {
							"not": { "required": ["client_cert_id"] },
							"required": ["client_cert"]
						}
					},
					"type": "object"
				},
				"checks": {
					"properties": {
						"passive": {
							"properties": {
								"healthy": {
									"properties": {
										"successes": {
											"minimum": 0,
											"default": 5,
											"maximum": 254,
											"type": "integer"
										},
										"http_statuses": {
											"items": {
												"minimum": 200,
												"maximum": 599,
												"type": "integer"
											},
											"uniqueItems": true,
											"default": [
												200, 201, 202, 203, 204, 205, 206, 207, 208, 226, 300,
												301, 302, 303, 304, 305, 306, 307, 308
											],
											"minItems": 1,
											"type": "array"
										}
									},
									"type": "object"
								},
								"unhealthy": {
									"properties": {
										"timeouts": {
											"minimum": 0,
											"default": 7,
											"maximum": 254,
											"type": "integer"
										},
										"http_failures": {
											"minimum": 0,
											"default": 5,
											"maximum": 254,
											"type": "integer"
										},
										"tcp_failures": {
											"minimum": 0,
											"default": 2,
											"maximum": 254,
											"type": "integer"
										},
										"http_statuses": {
											"items": {
												"minimum": 200,
												"maximum": 599,
												"type": "integer"
											},
											"uniqueItems": true,
											"default": [429, 500, 503],
											"minItems": 1,
											"type": "array"
										}
									},
									"type": "object"
								},
								"type": {
									"default": "http",
									"enum": ["http", "https", "tcp"],
									"type": "string"
								}
							},
							"type": "object"
						},
						"active": {
							"properties": {
								"concurrency": { "default": 10, "type": "integer" },
								"http_path": { "default": "/", "type": "string" },
								"https_verify_certificate": {
									"default": true,
									"type": "boolean"
								},
								"type": {
									"default": "http",
									"enum": ["http", "https", "tcp"],
									"type": "string"
								},
								"timeout": { "default": 1, "type": "number" },
								"req_headers": {
									"items": { "uniqueItems": true, "type": "string" },
									"minItems": 1,
									"type": "array"
								},
								"healthy": {
									"properties": {
										"successes": {
											"minimum": 1,
											"default": 2,
											"maximum": 254,
											"type": "integer"
										},
										"interval": {
											"minimum": 1,
											"default": 1,
											"type": "integer"
										},
										"http_statuses": {
											"items": {
												"minimum": 200,
												"maximum": 599,
												"type": "integer"
											},
											"uniqueItems": true,
											"default": [200, 302],
											"minItems": 1,
											"type": "array"
										}
									},
									"type": "object"
								},
								"port": { "minimum": 1, "maximum": 65535, "type": "integer" },
								"unhealthy": {
									"properties": {
										"http_statuses": {
											"items": {
												"minimum": 200,
												"maximum": 599,
												"type": "integer"
											},
											"uniqueItems": true,
											"default": [429, 404, 500, 501, 502, 503, 504, 505],
											"minItems": 1,
											"type": "array"
										},
										"interval": {
											"minimum": 1,
											"default": 1,
											"type": "integer"
										},
										"http_failures": {
											"minimum": 1,
											"default": 5,
											"maximum": 254,
											"type": "integer"
										},
										"tcp_failures": {
											"minimum": 1,
											"default": 2,
											"maximum": 254,
											"type": "integer"
										},
										"timeouts": {
											"minimum": 1,
											"default": 3,
											"maximum": 254,
											"type": "integer"
										}
									},
									"type": "object"
								},
								"host": {
									"pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
									"type": "string"
								}
							},
							"type": "object"
						}
					},
					"additionalProperties": false,
					"anyOf": [
						{ "required": ["active"] },
						{ "required": ["active", "passive"] }
					],
					"type": "object"
				},
				"timeout": {
					"properties": {
						"send": { "exclusiveMinimum": 0, "type": "number" },
						"read": { "exclusiveMinimum": 0, "type": "number" },
						"connect": { "exclusiveMinimum": 0, "type": "number" }
					},
					"required": ["connect", "send", "read"],
					"type": "object"
				},
				"discovery_type": { "type": "string", "description": "discovery type" },
				"labels": {
					"description": "key/value pairs to specify attributes",
					"patternProperties": {
						".*": {
							"minLength": 1,
							"maxLength": 256,
							"type": "string",
							"pattern": "^\\S+$",
							"description": "value of label"
						}
					},
					"type": "object"
				},
				"discovery_args": {
					"properties": {
						"group_name": { "type": "string", "description": "group name" },
						"namespace_id": { "type": "string", "description": "namespace id" }
					},
					"type": "object"
				},
				"key": {
					"type": "string",
					"description": "the key of chash for dynamic load balancing"
				},
				"name": { "type": "string", "minLength": 1, "maxLength": 100 },
				"desc": { "maxLength": 256, "type": "string" },
				"update_time": { "type": "integer" },
				"type": {
					"default": "roundrobin",
					"description": "algorithms of load balancing",
					"type": "string"
				},
				"upstream_host": {
					"pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
					"type": "string"
				},
				"pass_host": {
					"default": "pass",
					"description": "mod of host passing",
					"enum": ["pass", "node", "rewrite"],
					"type": "string"
				},
				"hash_on": {
					"default": "vars",
					"enum": ["vars", "header", "cookie", "consumer", "vars_combinations"],
					"type": "string"
				},
				"nodes": {
					"anyOf": [
						{
							"patternProperties": {
								".*": {
									"minimum": 0,
									"description": "weight of node",
									"type": "integer"
								}
							},
							"type": "object"
						},
						{
							"items": {
								"properties": {
									"host": {
										"pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
										"type": "string"
									},
									"weight": {
										"minimum": 0,
										"description": "weight of node",
										"type": "integer"
									},
									"metadata": {
										"type": "object",
										"description": "metadata of node"
									},
									"port": {
										"minimum": 1,
										"description": "port of node",
										"type": "integer"
									},
									"priority": {
										"default": 0,
										"description": "priority of node",
										"type": "integer"
									}
								},
								"required": ["host", "port", "weight"],
								"type": "object"
							},
							"type": "array"
						}
					]
				},
				"service_name": { "type": "string", "minLength": 1, "maxLength": 256 },
				"scheme": {
					"default": "http",
					"enum": [
						"grpc",
						"grpcs",
						"http",
						"https",
						"tcp",
						"tls",
						"udp",
						"kafka"
					],
					"description": "The scheme of the upstream. For L7 proxy, it can be one of grpc/grpcs/http/https. For L4 proxy, it can be one of tcp/tls/udp. For specific protocols, it can be kafka."
				}
			},
			"additionalProperties": false,
			"oneOf": [
				{ "required": ["nodes"] },
				{ "required": ["service_name", "discovery_type"] }
			],
			"type": "object"
		},
		"route": {
			"additionalProperties": false,
			"not": {
				"anyOf": [
					{ "required": ["script", "plugins"] },
					{ "required": ["script", "plugin_config_id"] }
				]
			},
			"properties": {
				"methods": {
					"items": {
						"description": "HTTP method",
						"enum": [
							"GET",
							"POST",
							"PUT",
							"DELETE",
							"PATCH",
							"HEAD",
							"OPTIONS",
							"CONNECT",
							"TRACE",
							"PURGE"
						],
						"type": "string"
					},
					"uniqueItems": true,
					"type": "array"
				},
				"host": { "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$", "type": "string" },
				"remote_addrs": {
					"uniqueItems": true,
					"items": {
						"description": "client IP",
						"anyOf": [
							{ "format": "ipv4", "title": "IPv4", "type": "string" },
							{
								"pattern": "^([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])/([12]?[0-9]|3[0-2])$",
								"title": "IPv4/CIDR",
								"type": "string"
							},
							{ "format": "ipv6", "title": "IPv6", "type": "string" },
							{
								"pattern": "^([a-fA-F0-9]{0,4}:){1,8}(:[a-fA-F0-9]{0,4}){0,8}([a-fA-F0-9]{0,4})?/[0-9]{1,3}$",
								"title": "IPv6/CIDR",
								"type": "string"
							}
						],
						"type": "string"
					},
					"minItems": 1,
					"type": "array"
				},
				"filter_func": {
					"pattern": "^function",
					"minLength": 10,
					"type": "string"
				},
				"script_id": {
					"anyOf": [
						{
							"pattern": "^[a-zA-Z0-9-_.]+$",
							"maxLength": 64,
							"minLength": 1,
							"type": "string"
						},
						{ "minimum": 1, "type": "integer" }
					]
				},
				"timeout": {
					"properties": {
						"send": { "exclusiveMinimum": 0, "type": "number" },
						"read": { "exclusiveMinimum": 0, "type": "number" },
						"connect": { "exclusiveMinimum": 0, "type": "number" }
					},
					"required": ["connect", "send", "read"],
					"type": "object"
				},
				"status": {
					"default": 1,
					"description": "route status, 1 to enable, 0 to disable",
					"enum": [1, 0],
					"type": "integer"
				},
				"vars": { "type": "array" },
				"uris": {
					"uniqueItems": true,
					"items": { "type": "string", "description": "HTTP uri" },
					"minItems": 1,
					"type": "array"
				},
				"id": {
					"anyOf": [
						{
							"pattern": "^[a-zA-Z0-9-_.]+$",
							"maxLength": 64,
							"minLength": 1,
							"type": "string"
						},
						{ "minimum": 1, "type": "integer" }
					]
				},
				"create_time": { "type": "integer" },
				"plugin_config_id": {
					"anyOf": [
						{
							"pattern": "^[a-zA-Z0-9-_.]+$",
							"maxLength": 64,
							"minLength": 1,
							"type": "string"
						},
						{ "minimum": 1, "type": "integer" }
					]
				},
				"hosts": {
					"uniqueItems": true,
					"items": {
						"pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
						"type": "string"
					},
					"minItems": 1,
					"type": "array"
				},
				"name": { "type": "string", "minLength": 1, "maxLength": 100 },
				"desc": { "maxLength": 256, "type": "string" },
				"service_id": {
					"anyOf": [
						{
							"pattern": "^[a-zA-Z0-9-_.]+$",
							"maxLength": 64,
							"minLength": 1,
							"type": "string"
						},
						{ "minimum": 1, "type": "integer" }
					]
				},
				"upstream": {
					"properties": {
						"id": {
							"anyOf": [
								{
									"pattern": "^[a-zA-Z0-9-_.]+$",
									"maxLength": 64,
									"minLength": 1,
									"type": "string"
								},
								{ "minimum": 1, "type": "integer" }
							]
						},
						"keepalive_pool": {
							"properties": {
								"idle_timeout": {
									"default": 60,
									"minimum": 0,
									"type": "number"
								},
								"requests": {
									"default": 1000,
									"minimum": 1,
									"type": "integer"
								},
								"size": { "default": 320, "minimum": 1, "type": "integer" }
							},
							"type": "object"
						},
						"create_time": { "type": "integer" },
						"retries": { "minimum": 0, "type": "integer" },
						"retry_timeout": { "minimum": 0, "type": "number" },
						"tls": {
							"properties": {
								"client_key": {
									"maxLength": 65536,
									"minLength": 128,
									"type": "string"
								},
								"verify": {
									"default": false,
									"type": "boolean",
									"description": "Turn on server certificate verification, currently only kafka upstream is supported"
								},
								"client_cert": {
									"maxLength": 65536,
									"minLength": 128,
									"type": "string"
								},
								"client_cert_id": {
									"anyOf": [
										{
											"pattern": "^[a-zA-Z0-9-_.]+$",
											"maxLength": 64,
											"minLength": 1,
											"type": "string"
										},
										{ "minimum": 1, "type": "integer" }
									]
								}
							},
							"dependencies": {
								"client_cert_id": {
									"not": { "required": ["client_client", "client_key"] }
								},
								"client_cert": {
									"not": { "required": ["client_cert_id"] },
									"required": ["client_key"]
								},
								"client_key": {
									"not": { "required": ["client_cert_id"] },
									"required": ["client_cert"]
								}
							},
							"type": "object"
						},
						"checks": {
							"properties": {
								"passive": {
									"properties": {
										"healthy": {
											"properties": {
												"successes": {
													"minimum": 0,
													"default": 5,
													"maximum": 254,
													"type": "integer"
												},
												"http_statuses": {
													"items": {
														"minimum": 200,
														"maximum": 599,
														"type": "integer"
													},
													"uniqueItems": true,
													"default": [
														200, 201, 202, 203, 204, 205, 206, 207, 208, 226,
														300, 301, 302, 303, 304, 305, 306, 307, 308
													],
													"minItems": 1,
													"type": "array"
												}
											},
											"type": "object"
										},
										"unhealthy": {
											"properties": {
												"timeouts": {
													"minimum": 0,
													"default": 7,
													"maximum": 254,
													"type": "integer"
												},
												"http_failures": {
													"minimum": 0,
													"default": 5,
													"maximum": 254,
													"type": "integer"
												},
												"tcp_failures": {
													"minimum": 0,
													"default": 2,
													"maximum": 254,
													"type": "integer"
												},
												"http_statuses": {
													"items": {
														"minimum": 200,
														"maximum": 599,
														"type": "integer"
													},
													"uniqueItems": true,
													"default": [429, 500, 503],
													"minItems": 1,
													"type": "array"
												}
											},
											"type": "object"
										},
										"type": {
											"default": "http",
											"enum": ["http", "https", "tcp"],
											"type": "string"
										}
									},
									"type": "object"
								},
								"active": {
									"properties": {
										"concurrency": { "default": 10, "type": "integer" },
										"http_path": { "default": "/", "type": "string" },
										"https_verify_certificate": {
											"default": true,
											"type": "boolean"
										},
										"type": {
											"default": "http",
											"enum": ["http", "https", "tcp"],
											"type": "string"
										},
										"timeout": { "default": 1, "type": "number" },
										"req_headers": {
											"items": { "uniqueItems": true, "type": "string" },
											"minItems": 1,
											"type": "array"
										},
										"healthy": {
											"properties": {
												"successes": {
													"minimum": 1,
													"default": 2,
													"maximum": 254,
													"type": "integer"
												},
												"interval": {
													"minimum": 1,
													"default": 1,
													"type": "integer"
												},
												"http_statuses": {
													"items": {
														"minimum": 200,
														"maximum": 599,
														"type": "integer"
													},
													"uniqueItems": true,
													"default": [200, 302],
													"minItems": 1,
													"type": "array"
												}
											},
											"type": "object"
										},
										"port": {
											"minimum": 1,
											"maximum": 65535,
											"type": "integer"
										},
										"unhealthy": {
											"properties": {
												"http_statuses": {
													"items": {
														"minimum": 200,
														"maximum": 599,
														"type": "integer"
													},
													"uniqueItems": true,
													"default": [429, 404, 500, 501, 502, 503, 504, 505],
													"minItems": 1,
													"type": "array"
												},
												"interval": {
													"minimum": 1,
													"default": 1,
													"type": "integer"
												},
												"http_failures": {
													"minimum": 1,
													"default": 5,
													"maximum": 254,
													"type": "integer"
												},
												"tcp_failures": {
													"minimum": 1,
													"default": 2,
													"maximum": 254,
													"type": "integer"
												},
												"timeouts": {
													"minimum": 1,
													"default": 3,
													"maximum": 254,
													"type": "integer"
												}
											},
											"type": "object"
										},
										"host": {
											"pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
											"type": "string"
										}
									},
									"type": "object"
								}
							},
							"additionalProperties": false,
							"anyOf": [
								{ "required": ["active"] },
								{ "required": ["active", "passive"] }
							],
							"type": "object"
						},
						"timeout": {
							"properties": {
								"send": { "exclusiveMinimum": 0, "type": "number" },
								"read": { "exclusiveMinimum": 0, "type": "number" },
								"connect": { "exclusiveMinimum": 0, "type": "number" }
							},
							"required": ["connect", "send", "read"],
							"type": "object"
						},
						"discovery_type": {
							"type": "string",
							"description": "discovery type"
						},
						"labels": {
							"description": "key/value pairs to specify attributes",
							"patternProperties": {
								".*": {
									"minLength": 1,
									"maxLength": 256,
									"type": "string",
									"pattern": "^\\S+$",
									"description": "value of label"
								}
							},
							"type": "object"
						},
						"discovery_args": {
							"properties": {
								"group_name": { "type": "string", "description": "group name" },
								"namespace_id": {
									"type": "string",
									"description": "namespace id"
								}
							},
							"type": "object"
						},
						"key": {
							"type": "string",
							"description": "the key of chash for dynamic load balancing"
						},
						"name": { "type": "string", "minLength": 1, "maxLength": 100 },
						"desc": { "maxLength": 256, "type": "string" },
						"update_time": { "type": "integer" },
						"type": {
							"default": "roundrobin",
							"description": "algorithms of load balancing",
							"type": "string"
						},
						"upstream_host": {
							"pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
							"type": "string"
						},
						"pass_host": {
							"default": "pass",
							"description": "mod of host passing",
							"enum": ["pass", "node", "rewrite"],
							"type": "string"
						},
						"hash_on": {
							"default": "vars",
							"enum": [
								"vars",
								"header",
								"cookie",
								"consumer",
								"vars_combinations"
							],
							"type": "string"
						},
						"nodes": {
							"anyOf": [
								{
									"patternProperties": {
										".*": {
											"minimum": 0,
											"description": "weight of node",
											"type": "integer"
										}
									},
									"type": "object"
								},
								{
									"items": {
										"properties": {
											"host": {
												"pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
												"type": "string"
											},
											"weight": {
												"minimum": 0,
												"description": "weight of node",
												"type": "integer"
											},
											"metadata": {
												"type": "object",
												"description": "metadata of node"
											},
											"port": {
												"minimum": 1,
												"description": "port of node",
												"type": "integer"
											},
											"priority": {
												"default": 0,
												"description": "priority of node",
												"type": "integer"
											}
										},
										"required": ["host", "port", "weight"],
										"type": "object"
									},
									"type": "array"
								}
							]
						},
						"service_name": {
							"type": "string",
							"minLength": 1,
							"maxLength": 256
						},
						"scheme": {
							"default": "http",
							"enum": [
								"grpc",
								"grpcs",
								"http",
								"https",
								"tcp",
								"tls",
								"udp",
								"kafka"
							],
							"description": "The scheme of the upstream. For L7 proxy, it can be one of grpc/grpcs/http/https. For L4 proxy, it can be one of tcp/tls/udp. For specific protocols, it can be kafka."
						}
					},
					"additionalProperties": false,
					"oneOf": [
						{ "required": ["nodes"] },
						{ "required": ["service_name", "discovery_type"] }
					],
					"type": "object"
				},
				"priority": { "default": 0, "type": "integer" },
				"labels": {
					"description": "key/value pairs to specify attributes",
					"patternProperties": {
						".*": {
							"minLength": 1,
							"maxLength": 256,
							"type": "string",
							"pattern": "^\\S+$",
							"description": "value of label"
						}
					},
					"type": "object"
				},
				"plugins": { "type": "object" },
				"enable_websocket": {
					"type": "boolean",
					"description": "enable websocket for request"
				},
				"remote_addr": {
					"description": "client IP",
					"anyOf": [
						{ "format": "ipv4", "title": "IPv4", "type": "string" },
						{
							"pattern": "^([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])/([12]?[0-9]|3[0-2])$",
							"title": "IPv4/CIDR",
							"type": "string"
						},
						{ "format": "ipv6", "title": "IPv6", "type": "string" },
						{
							"pattern": "^([a-fA-F0-9]{0,4}:){1,8}(:[a-fA-F0-9]{0,4}){0,8}([a-fA-F0-9]{0,4})?/[0-9]{1,3}$",
							"title": "IPv6/CIDR",
							"type": "string"
						}
					],
					"type": "string"
				},
				"upstream_id": {
					"anyOf": [
						{
							"pattern": "^[a-zA-Z0-9-_.]+$",
							"maxLength": 64,
							"minLength": 1,
							"type": "string"
						},
						{ "minimum": 1, "type": "integer" }
					]
				},
				"uri": { "maxLength": 4096, "minLength": 1, "type": "string" },
				"update_time": { "type": "integer" },
				"script": { "maxLength": 102400, "minLength": 10, "type": "string" }
			},
			"allOf": [
				{ "oneOf": [{ "required": ["uri"] }, { "required": ["uris"] }] },
				{
					"oneOf": [
						{
							"not": {
								"anyOf": [{ "required": ["host"] }, { "required": ["hosts"] }]
							}
						},
						{ "required": ["host"] },
						{ "required": ["hosts"] }
					]
				},
				{
					"oneOf": [
						{
							"not": {
								"anyOf": [
									{ "required": ["remote_addr"] },
									{ "required": ["remote_addrs"] }
								]
							}
						},
						{ "required": ["remote_addr"] },
						{ "required": ["remote_addrs"] }
					]
				}
			],
			"anyOf": [
				{ "required": ["plugins", "uri"] },
				{ "required": ["upstream", "uri"] },
				{ "required": ["upstream_id", "uri"] },
				{ "required": ["service_id", "uri"] },
				{ "required": ["plugins", "uris"] },
				{ "required": ["upstream", "uris"] },
				{ "required": ["upstream_id", "uris"] },
				{ "required": ["service_id", "uris"] },
				{ "required": ["script", "uri"] },
				{ "required": ["script", "uris"] }
			],
			"type": "object"
		},
		"ssl": {
			"additionalProperties": false,
			"then": {
				"oneOf": [
					{ "required": ["sni", "key", "cert"] },
					{ "required": ["snis", "key", "cert"] }
				]
			},
			"properties": {
				"id": {
					"anyOf": [
						{
							"pattern": "^[a-zA-Z0-9-_.]+$",
							"maxLength": 64,
							"minLength": 1,
							"type": "string"
						},
						{ "minimum": 1, "type": "integer" }
					]
				},
				"create_time": { "type": "integer" },
				"cert": {
					"oneOf": [
						{ "maxLength": 65536, "minLength": 128, "type": "string" },
						{ "pattern": "^\\$(secret|env)://", "type": "string" }
					]
				},
				"labels": {
					"description": "key/value pairs to specify attributes",
					"patternProperties": {
						".*": {
							"minLength": 1,
							"maxLength": 256,
							"type": "string",
							"pattern": "^\\S+$",
							"description": "value of label"
						}
					},
					"type": "object"
				},
				"snis": {
					"items": {
						"pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
						"type": "string"
					},
					"minItems": 1,
					"type": "array"
				},
				"certs": {
					"items": { "maxLength": 65536, "minLength": 128, "type": "string" },
					"type": "array"
				},
				"key": {
					"oneOf": [
						{ "maxLength": 65536, "minLength": 128, "type": "string" },
						{ "pattern": "^\\$(secret|env)://", "type": "string" }
					]
				},
				"exptime": { "minimum": 1588262400, "type": "integer" },
				"client": {
					"properties": {
						"ca": { "maxLength": 65536, "minLength": 128, "type": "string" },
						"depth": { "minimum": 0, "default": 1, "type": "integer" },
						"skip_mtls_uri_regex": {
							"uniqueItems": true,
							"items": {
								"type": "string",
								"description": "uri regular expression to skip mtls"
							},
							"minItems": 1,
							"type": "array"
						}
					},
					"required": ["ca"],
					"type": "object"
				},
				"status": {
					"default": 1,
					"description": "ssl status, 1 to enable, 0 to disable",
					"enum": [1, 0],
					"type": "integer"
				},
				"validity_start": { "type": "integer" },
				"sni": { "pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$", "type": "string" },
				"type": {
					"default": "server",
					"description": "ssl certificate type, server to server certificate, client to client certificate for upstream",
					"enum": ["server", "client"],
					"type": "string"
				},
				"keys": {
					"items": { "maxLength": 65536, "minLength": 128, "type": "string" },
					"type": "array"
				},
				"update_time": { "type": "integer" },
				"ssl_protocols": {
					"items": { "enum": ["TLSv1.1", "TLSv1.2", "TLSv1.3"] },
					"uniqueItems": true,
					"maxItems": 3,
					"type": "array",
					"description": "set ssl protocols"
				},
				"validity_end": { "type": "integer" }
			},
			"else": { "required": ["key", "cert"] },
			"if": { "properties": { "type": { "enum": ["server"] } } },
			"type": "object"
		},
		"stream_route": {
			"properties": {
				"id": {
					"anyOf": [
						{
							"pattern": "^[a-zA-Z0-9-_.]+$",
							"maxLength": 64,
							"minLength": 1,
							"type": "string"
						},
						{ "minimum": 1, "type": "integer" }
					]
				},
				"plugins": { "type": "object" },
				"create_time": { "type": "integer" },
				"desc": { "maxLength": 256, "type": "string" },
				"sni": {
					"description": "server name indication",
					"pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
					"type": "string"
				},
				"update_time": { "type": "integer" },
				"protocol": {
					"properties": {
						"superior_id": {
							"anyOf": [
								{
									"pattern": "^[a-zA-Z0-9-_.]+$",
									"maxLength": 64,
									"minLength": 1,
									"type": "string"
								},
								{ "minimum": 1, "type": "integer" }
							]
						},
						"conf": {
							"type": "object",
							"description": "protocol-specific configuration"
						},
						"logger": {
							"items": {
								"properties": {
									"conf": {
										"type": "object",
										"description": "logger plugin configuration"
									},
									"filter": {
										"type": "array",
										"description": "logger filter rules"
									},
									"name": { "type": "string" }
								},
								"additionalProperties": false,
								"dependencies": { "name": ["conf"] }
							},
							"type": "array"
						},
						"name": { "type": "string" }
					},
					"required": ["name"],
					"type": "object"
				},
				"remote_addr": {
					"description": "client IP",
					"anyOf": [
						{ "format": "ipv4", "title": "IPv4", "type": "string" },
						{
							"pattern": "^([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])/([12]?[0-9]|3[0-2])$",
							"title": "IPv4/CIDR",
							"type": "string"
						},
						{ "format": "ipv6", "title": "IPv6", "type": "string" },
						{
							"pattern": "^([a-fA-F0-9]{0,4}:){1,8}(:[a-fA-F0-9]{0,4}){0,8}([a-fA-F0-9]{0,4})?/[0-9]{1,3}$",
							"title": "IPv6/CIDR",
							"type": "string"
						}
					],
					"type": "string"
				},
				"upstream_id": {
					"anyOf": [
						{
							"pattern": "^[a-zA-Z0-9-_.]+$",
							"maxLength": 64,
							"minLength": 1,
							"type": "string"
						},
						{ "minimum": 1, "type": "integer" }
					]
				},
				"server_port": { "type": "integer", "description": "server port" },
				"server_addr": {
					"description": "server IP",
					"anyOf": [
						{ "format": "ipv4", "title": "IPv4", "type": "string" },
						{
							"pattern": "^([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])/([12]?[0-9]|3[0-2])$",
							"title": "IPv4/CIDR",
							"type": "string"
						},
						{ "format": "ipv6", "title": "IPv6", "type": "string" },
						{
							"pattern": "^([a-fA-F0-9]{0,4}:){1,8}(:[a-fA-F0-9]{0,4}){0,8}([a-fA-F0-9]{0,4})?/[0-9]{1,3}$",
							"title": "IPv6/CIDR",
							"type": "string"
						}
					],
					"type": "string"
				},
				"upstream": {
					"properties": {
						"id": {
							"anyOf": [
								{
									"pattern": "^[a-zA-Z0-9-_.]+$",
									"maxLength": 64,
									"minLength": 1,
									"type": "string"
								},
								{ "minimum": 1, "type": "integer" }
							]
						},
						"keepalive_pool": {
							"properties": {
								"idle_timeout": {
									"default": 60,
									"minimum": 0,
									"type": "number"
								},
								"requests": {
									"default": 1000,
									"minimum": 1,
									"type": "integer"
								},
								"size": { "default": 320, "minimum": 1, "type": "integer" }
							},
							"type": "object"
						},
						"create_time": { "type": "integer" },
						"retries": { "minimum": 0, "type": "integer" },
						"retry_timeout": { "minimum": 0, "type": "number" },
						"tls": {
							"properties": {
								"client_key": {
									"maxLength": 65536,
									"minLength": 128,
									"type": "string"
								},
								"verify": {
									"default": false,
									"type": "boolean",
									"description": "Turn on server certificate verification, currently only kafka upstream is supported"
								},
								"client_cert": {
									"maxLength": 65536,
									"minLength": 128,
									"type": "string"
								},
								"client_cert_id": {
									"anyOf": [
										{
											"pattern": "^[a-zA-Z0-9-_.]+$",
											"maxLength": 64,
											"minLength": 1,
											"type": "string"
										},
										{ "minimum": 1, "type": "integer" }
									]
								}
							},
							"dependencies": {
								"client_cert_id": {
									"not": { "required": ["client_client", "client_key"] }
								},
								"client_cert": {
									"not": { "required": ["client_cert_id"] },
									"required": ["client_key"]
								},
								"client_key": {
									"not": { "required": ["client_cert_id"] },
									"required": ["client_cert"]
								}
							},
							"type": "object"
						},
						"checks": {
							"properties": {
								"passive": {
									"properties": {
										"healthy": {
											"properties": {
												"successes": {
													"minimum": 0,
													"default": 5,
													"maximum": 254,
													"type": "integer"
												},
												"http_statuses": {
													"items": {
														"minimum": 200,
														"maximum": 599,
														"type": "integer"
													},
													"uniqueItems": true,
													"default": [
														200, 201, 202, 203, 204, 205, 206, 207, 208, 226,
														300, 301, 302, 303, 304, 305, 306, 307, 308
													],
													"minItems": 1,
													"type": "array"
												}
											},
											"type": "object"
										},
										"unhealthy": {
											"properties": {
												"timeouts": {
													"minimum": 0,
													"default": 7,
													"maximum": 254,
													"type": "integer"
												},
												"http_failures": {
													"minimum": 0,
													"default": 5,
													"maximum": 254,
													"type": "integer"
												},
												"tcp_failures": {
													"minimum": 0,
													"default": 2,
													"maximum": 254,
													"type": "integer"
												},
												"http_statuses": {
													"items": {
														"minimum": 200,
														"maximum": 599,
														"type": "integer"
													},
													"uniqueItems": true,
													"default": [429, 500, 503],
													"minItems": 1,
													"type": "array"
												}
											},
											"type": "object"
										},
										"type": {
											"default": "http",
											"enum": ["http", "https", "tcp"],
											"type": "string"
										}
									},
									"type": "object"
								},
								"active": {
									"properties": {
										"concurrency": { "default": 10, "type": "integer" },
										"http_path": { "default": "/", "type": "string" },
										"https_verify_certificate": {
											"default": true,
											"type": "boolean"
										},
										"type": {
											"default": "http",
											"enum": ["http", "https", "tcp"],
											"type": "string"
										},
										"timeout": { "default": 1, "type": "number" },
										"req_headers": {
											"items": { "uniqueItems": true, "type": "string" },
											"minItems": 1,
											"type": "array"
										},
										"healthy": {
											"properties": {
												"successes": {
													"minimum": 1,
													"default": 2,
													"maximum": 254,
													"type": "integer"
												},
												"interval": {
													"minimum": 1,
													"default": 1,
													"type": "integer"
												},
												"http_statuses": {
													"items": {
														"minimum": 200,
														"maximum": 599,
														"type": "integer"
													},
													"uniqueItems": true,
													"default": [200, 302],
													"minItems": 1,
													"type": "array"
												}
											},
											"type": "object"
										},
										"port": {
											"minimum": 1,
											"maximum": 65535,
											"type": "integer"
										},
										"unhealthy": {
											"properties": {
												"http_statuses": {
													"items": {
														"minimum": 200,
														"maximum": 599,
														"type": "integer"
													},
													"uniqueItems": true,
													"default": [429, 404, 500, 501, 502, 503, 504, 505],
													"minItems": 1,
													"type": "array"
												},
												"interval": {
													"minimum": 1,
													"default": 1,
													"type": "integer"
												},
												"http_failures": {
													"minimum": 1,
													"default": 5,
													"maximum": 254,
													"type": "integer"
												},
												"tcp_failures": {
													"minimum": 1,
													"default": 2,
													"maximum": 254,
													"type": "integer"
												},
												"timeouts": {
													"minimum": 1,
													"default": 3,
													"maximum": 254,
													"type": "integer"
												}
											},
											"type": "object"
										},
										"host": {
											"pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
											"type": "string"
										}
									},
									"type": "object"
								}
							},
							"additionalProperties": false,
							"anyOf": [
								{ "required": ["active"] },
								{ "required": ["active", "passive"] }
							],
							"type": "object"
						},
						"timeout": {
							"properties": {
								"send": { "exclusiveMinimum": 0, "type": "number" },
								"read": { "exclusiveMinimum": 0, "type": "number" },
								"connect": { "exclusiveMinimum": 0, "type": "number" }
							},
							"required": ["connect", "send", "read"],
							"type": "object"
						},
						"discovery_type": {
							"type": "string",
							"description": "discovery type"
						},
						"labels": {
							"description": "key/value pairs to specify attributes",
							"patternProperties": {
								".*": {
									"minLength": 1,
									"maxLength": 256,
									"type": "string",
									"pattern": "^\\S+$",
									"description": "value of label"
								}
							},
							"type": "object"
						},
						"discovery_args": {
							"properties": {
								"group_name": { "type": "string", "description": "group name" },
								"namespace_id": {
									"type": "string",
									"description": "namespace id"
								}
							},
							"type": "object"
						},
						"key": {
							"type": "string",
							"description": "the key of chash for dynamic load balancing"
						},
						"name": { "type": "string", "minLength": 1, "maxLength": 100 },
						"desc": { "maxLength": 256, "type": "string" },
						"update_time": { "type": "integer" },
						"type": {
							"default": "roundrobin",
							"description": "algorithms of load balancing",
							"type": "string"
						},
						"upstream_host": {
							"pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
							"type": "string"
						},
						"pass_host": {
							"default": "pass",
							"description": "mod of host passing",
							"enum": ["pass", "node", "rewrite"],
							"type": "string"
						},
						"hash_on": {
							"default": "vars",
							"enum": [
								"vars",
								"header",
								"cookie",
								"consumer",
								"vars_combinations"
							],
							"type": "string"
						},
						"nodes": {
							"anyOf": [
								{
									"patternProperties": {
										".*": {
											"minimum": 0,
											"description": "weight of node",
											"type": "integer"
										}
									},
									"type": "object"
								},
								{
									"items": {
										"properties": {
											"host": {
												"pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
												"type": "string"
											},
											"weight": {
												"minimum": 0,
												"description": "weight of node",
												"type": "integer"
											},
											"metadata": {
												"type": "object",
												"description": "metadata of node"
											},
											"port": {
												"minimum": 1,
												"description": "port of node",
												"type": "integer"
											},
											"priority": {
												"default": 0,
												"description": "priority of node",
												"type": "integer"
											}
										},
										"required": ["host", "port", "weight"],
										"type": "object"
									},
									"type": "array"
								}
							]
						},
						"service_name": {
							"type": "string",
							"minLength": 1,
							"maxLength": 256
						},
						"scheme": {
							"default": "http",
							"enum": [
								"grpc",
								"grpcs",
								"http",
								"https",
								"tcp",
								"tls",
								"udp",
								"kafka"
							],
							"description": "The scheme of the upstream. For L7 proxy, it can be one of grpc/grpcs/http/https. For L4 proxy, it can be one of tcp/tls/udp. For specific protocols, it can be kafka."
						}
					},
					"additionalProperties": false,
					"oneOf": [
						{ "required": ["nodes"] },
						{ "required": ["service_name", "discovery_type"] }
					],
					"type": "object"
				}
			},
			"additionalProperties": false,
			"type": "object"
		},
		"consumer_group": {
			"properties": {
				"id": {
					"anyOf": [
						{
							"pattern": "^[a-zA-Z0-9-_.]+$",
							"maxLength": 64,
							"minLength": 1,
							"type": "string"
						},
						{ "minimum": 1, "type": "integer" }
					]
				},
				"plugins": { "type": "object" },
				"create_time": { "type": "integer" },
				"desc": { "maxLength": 256, "type": "string" },
				"labels": {
					"description": "key/value pairs to specify attributes",
					"patternProperties": {
						".*": {
							"minLength": 1,
							"maxLength": 256,
							"type": "string",
							"pattern": "^\\S+$",
							"description": "value of label"
						}
					},
					"type": "object"
				},
				"update_time": { "type": "integer" }
			},
			"required": ["id", "plugins"],
			"additionalProperties": false,
			"type": "object"
		},
		"proto": {
			"properties": {
				"id": {
					"anyOf": [
						{
							"pattern": "^[a-zA-Z0-9-_.]+$",
							"maxLength": 64,
							"minLength": 1,
							"type": "string"
						},
						{ "minimum": 1, "type": "integer" }
					]
				},
				"create_time": { "type": "integer" },
				"desc": { "maxLength": 256, "type": "string" },
				"content": { "maxLength": 1048576, "minLength": 1, "type": "string" },
				"update_time": { "type": "integer" }
			},
			"required": ["content"],
			"additionalProperties": false,
			"type": "object"
		}
	},
	"plugins": {
		"datadog": {
			"version": 0.1,
			"schema": {
				"properties": {
					"prefer_name": { "default": true, "type": "boolean" },
					"batch_max_size": {
						"minimum": 1,
						"default": 1000,
						"type": "integer"
					},
					"max_retry_count": { "minimum": 0, "default": 0, "type": "integer" },
					"retry_delay": { "minimum": 0, "default": 1, "type": "integer" },
					"buffer_duration": { "minimum": 1, "default": 60, "type": "integer" },
					"inactive_timeout": { "minimum": 1, "default": 5, "type": "integer" },
					"name": { "default": "datadog", "type": "string" },
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					}
				},
				"$comment": "this is a mark for our injected plugin schema",
				"type": "object"
			},
			"priority": 495,
			"metadata_schema": {
				"properties": {
					"host": { "default": "127.0.0.1", "type": "string" },
					"port": { "minimum": 0, "default": 8125, "type": "integer" },
					"namespace": { "default": "apisix", "type": "string" },
					"constant_tags": {
						"default": ["source:apisix"],
						"items": { "type": "string" },
						"type": "array"
					}
				},
				"type": "object"
			}
		},
		"zipkin": {
			"version": 0.1,
			"schema": {
				"properties": {
					"span_version": { "enum": [1, 2], "default": 2 },
					"sample_ratio": { "minimum": 1e-5, "maximum": 1, "type": "number" },
					"service_name": {
						"default": "APISIX",
						"type": "string",
						"description": "service name for zipkin reporter"
					},
					"endpoint": { "type": "string" },
					"server_addr": {
						"type": "string",
						"pattern": "^[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}$",
						"description": "default is $server_addr, you can specify your external ip address"
					},
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					}
				},
				"required": ["endpoint", "sample_ratio"],
				"$comment": "this is a mark for our injected plugin schema",
				"type": "object"
			},
			"priority": 12011
		},
		"elasticsearch-logger": {
			"version": 0.1,
			"schema": {
				"oneOf": [
					{ "required": ["endpoint_addr", "field"] },
					{ "required": ["endpoint_addrs", "field"] }
				],
				"properties": {
					"endpoint_addrs": {
						"items": { "pattern": "[^/]$", "type": "string" },
						"minItems": 1,
						"type": "array"
					},
					"auth": {
						"properties": {
							"username": { "minLength": 1, "type": "string" },
							"password": { "minLength": 1, "type": "string" }
						},
						"required": ["username", "password"],
						"type": "object"
					},
					"max_retry_count": { "minimum": 0, "default": 0, "type": "integer" },
					"inactive_timeout": { "minimum": 1, "default": 5, "type": "integer" },
					"name": { "default": "elasticsearch-logger", "type": "string" },
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					},
					"timeout": { "minimum": 1, "default": 10, "type": "integer" },
					"field": {
						"properties": {
							"type": { "type": "string" },
							"index": { "type": "string" }
						},
						"required": ["index"],
						"type": "object"
					},
					"ssl_verify": { "default": true, "type": "boolean" },
					"retry_delay": { "minimum": 0, "default": 1, "type": "integer" },
					"buffer_duration": { "minimum": 1, "default": 60, "type": "integer" },
					"batch_max_size": {
						"minimum": 1,
						"default": 1000,
						"type": "integer"
					},
					"endpoint_addr": { "pattern": "[^/]$", "type": "string" },
					"log_format": { "type": "object" }
				},
				"$comment": "this is a mark for our injected plugin schema",
				"encrypt_fields": ["auth.password"],
				"type": "object"
			},
			"priority": 413,
			"metadata_schema": {
				"properties": {
					"log_format": {
						"default": {
							"client_ip": "$remote_addr",
							"host": "$host",
							"@timestamp": "$time_iso8601"
						},
						"type": "object"
					}
				},
				"type": "object"
			}
		},
		"opa": {
			"version": 0.1,
			"schema": {
				"properties": {
					"with_service": { "default": false, "type": "boolean" },
					"host": { "type": "string" },
					"keepalive_pool": { "minimum": 1, "default": 5, "type": "integer" },
					"keepalive_timeout": {
						"minimum": 1000,
						"default": 60000,
						"type": "integer"
					},
					"keepalive": { "default": true, "type": "boolean" },
					"timeout": {
						"minimum": 1,
						"default": 3000,
						"description": "timeout in milliseconds",
						"type": "integer",
						"maximum": 60000
					},
					"ssl_verify": { "default": true, "type": "boolean" },
					"policy": { "type": "string" },
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					},
					"send_headers_upstream": {
						"description": "list of headers to pass to upstream in request",
						"items": { "type": "string" },
						"minItems": 1,
						"type": "array"
					},
					"with_consumer": { "default": false, "type": "boolean" },
					"with_route": { "default": false, "type": "boolean" }
				},
				"required": ["host", "policy"],
				"$comment": "this is a mark for our injected plugin schema",
				"type": "object"
			},
			"priority": 2001
		},
		"example-plugin": {
			"version": 0.1,
			"schema": {
				"properties": {
					"ip": { "type": "string" },
					"t": { "minItems": 1, "type": "array" },
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					},
					"port": { "type": "integer" },
					"s": { "type": "string" },
					"i": { "minimum": 0, "type": "number" }
				},
				"required": ["i"],
				"$comment": "this is a mark for our injected plugin schema",
				"type": "object"
			},
			"metadata_schema": {
				"properties": {
					"ikey": { "minimum": 0, "type": "number" },
					"skey": { "type": "string" }
				},
				"required": ["ikey", "skey"],
				"type": "object"
			},
			"priority": 0
		},
		"skywalking-logger": {
			"version": 0.1,
			"schema": {
				"properties": {
					"name": { "default": "skywalking logger", "type": "string" },
					"service_name": { "default": "APISIX", "type": "string" },
					"inactive_timeout": { "minimum": 1, "default": 5, "type": "integer" },
					"buffer_duration": { "minimum": 1, "default": 60, "type": "integer" },
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					},
					"timeout": { "minimum": 1, "default": 3, "type": "integer" },
					"batch_max_size": {
						"minimum": 1,
						"default": 1000,
						"type": "integer"
					},
					"max_retry_count": { "minimum": 0, "default": 0, "type": "integer" },
					"retry_delay": { "minimum": 0, "default": 1, "type": "integer" },
					"include_req_body": { "default": false, "type": "boolean" },
					"service_instance_name": {
						"default": "APISIX Instance Name",
						"type": "string"
					},
					"endpoint_addr": {
						"pattern": "^[^\\/]+:\\/\\/([\\da-zA-Z.-]+|\\[[\\da-fA-F:]+\\])(:\\d+)?",
						"type": "string"
					},
					"log_format": { "type": "object" }
				},
				"required": ["endpoint_addr"],
				"$comment": "this is a mark for our injected plugin schema",
				"type": "object"
			},
			"priority": 408,
			"metadata_schema": {
				"properties": {
					"log_format": {
						"default": {
							"client_ip": "$remote_addr",
							"host": "$host",
							"@timestamp": "$time_iso8601"
						},
						"type": "object"
					}
				},
				"type": "object"
			}
		},
		"cors": {
			"version": 0.1,
			"schema": {
				"properties": {
					"allow_methods": {
						"default": "*",
						"description": "you can use '*' to allow all methods when no credentials,'**' to allow forcefully(it will bring some security risks, be carefully),multiple method use ',' to split. default: *.",
						"type": "string"
					},
					"allow_origins_by_metadata": {
						"items": { "maxLength": 4096, "minLength": 1, "type": "string" },
						"uniqueItems": true,
						"description": "set allowed origins by referencing origins in plugin metadata",
						"minItems": 1,
						"type": "array"
					},
					"allow_headers": {
						"default": "*",
						"description": "you can use '*' to allow all header when no credentials,'**' to allow forcefully(it will bring some security risks, be carefully),multiple header use ',' to split. default: *.",
						"type": "string"
					},
					"expose_headers": {
						"default": "*",
						"description": "you can use '*' to expose all header when no credentials,'**' to allow forcefully(it will bring some security risks, be carefully),multiple header use ',' to split. default: *.",
						"type": "string"
					},
					"max_age": {
						"default": 5,
						"description": "maximum number of seconds the results can be cached.-1 means no cached, the max value is depend on browser,more details plz check MDN. default: 5.",
						"type": "integer"
					},
					"allow_credential": {
						"default": false,
						"description": "allow client append credential. according to CORS specification,if you set this option to 'true', you can not use '*' for other options.",
						"type": "boolean"
					},
					"allow_origins": {
						"default": "*",
						"description": "you can use '*' to allow all origins when no credentials,'**' to allow forcefully(it will bring some security risks, be carefully),multiple origin use ',' to split. default: *.",
						"pattern": "^(\\*|\\*\\*|null|\\w+://[^,]+(,\\w+://[^,]+)*)$",
						"type": "string"
					},
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					},
					"allow_origins_by_regex": {
						"items": { "maxLength": 4096, "minLength": 1, "type": "string" },
						"uniqueItems": true,
						"description": "you can use regex to allow specific origins when no credentials,for example use [.*\\.test.com] to allow a.test.com and b.test.com",
						"minItems": 1,
						"type": "array"
					}
				},
				"$comment": "this is a mark for our injected plugin schema",
				"type": "object"
			},
			"metadata_schema": {
				"properties": {
					"allow_origins": {
						"additionalProperties": {
							"pattern": "^(\\*|\\*\\*|null|\\w+://[^,]+(,\\w+://[^,]+)*)$",
							"type": "string"
						},
						"type": "object"
					}
				},
				"type": "object"
			},
			"priority": 4000
		},
		"wolf-rbac": {
			"version": 0.1,
			"schema": {
				"properties": {
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					},
					"appid": { "default": "unset", "type": "string" },
					"header_prefix": { "default": "X-", "type": "string" },
					"server": { "default": "http://127.0.0.1:12180", "type": "string" }
				},
				"$comment": "this is a mark for our injected plugin schema",
				"type": "object"
			},
			"type": "auth",
			"priority": 2555
		},
		"uri-blocker": {
			"version": 0.1,
			"schema": {
				"properties": {
					"block_rules": {
						"items": { "maxLength": 4096, "minLength": 1, "type": "string" },
						"uniqueItems": true,
						"type": "array"
					},
					"rejected_code": {
						"minimum": 200,
						"default": 403,
						"type": "integer"
					},
					"rejected_msg": { "minLength": 1, "type": "string" },
					"case_insensitive": { "default": false, "type": "boolean" },
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					}
				},
				"required": ["block_rules"],
				"$comment": "this is a mark for our injected plugin schema",
				"type": "object"
			},
			"priority": 2900
		},
		"limit-conn": {
			"version": 0.1,
			"schema": {
				"properties": {
					"key": { "type": "string" },
					"conn": { "exclusiveMinimum": 0, "type": "integer" },
					"rejected_msg": { "minLength": 1, "type": "string" },
					"burst": { "minimum": 0, "type": "integer" },
					"default_conn_delay": { "exclusiveMinimum": 0, "type": "number" },
					"only_use_default_delay": { "default": false, "type": "boolean" },
					"key_type": {
						"default": "var",
						"enum": ["var", "var_combination"],
						"type": "string"
					},
					"allow_degradation": { "default": false, "type": "boolean" },
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					},
					"rejected_code": {
						"minimum": 200,
						"default": 503,
						"maximum": 599,
						"type": "integer"
					}
				},
				"required": ["conn", "burst", "default_conn_delay", "key"],
				"$comment": "this is a mark for our injected plugin schema",
				"type": "object"
			},
			"priority": 1003
		},
		"real-ip": {
			"version": 0.1,
			"schema": {
				"properties": {
					"trusted_addresses": {
						"items": {
							"anyOf": [
								{ "format": "ipv4", "title": "IPv4", "type": "string" },
								{
									"pattern": "^([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])/([12]?[0-9]|3[0-2])$",
									"title": "IPv4/CIDR",
									"type": "string"
								},
								{ "format": "ipv6", "title": "IPv6", "type": "string" },
								{
									"pattern": "^([a-fA-F0-9]{0,4}:){1,8}(:[a-fA-F0-9]{0,4}){0,8}([a-fA-F0-9]{0,4})?/[0-9]{1,3}$",
									"title": "IPv6/CIDR",
									"type": "string"
								}
							]
						},
						"minItems": 1,
						"type": "array"
					},
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					},
					"recursive": { "default": false, "type": "boolean" },
					"source": { "minLength": 1, "type": "string" }
				},
				"required": ["source"],
				"$comment": "this is a mark for our injected plugin schema",
				"type": "object"
			},
			"priority": 23000
		},
		"redirect": {
			"version": 0.1,
			"schema": {
				"properties": {
					"ret_code": { "minimum": 200, "default": 302, "type": "integer" },
					"regex_uri": {
						"items": { "type": "string", "description": "regex uri" },
						"type": "array",
						"maxItems": 2,
						"minItems": 2,
						"description": "params for generating new uri that substitute from client uri, first param is regular expression, the second one is uri template"
					},
					"uri": {
						"pattern": "(\\\\\\$[0-9a-zA-Z_]+)|\\$\\{([0-9a-zA-Z_]+)\\}|\\$([0-9a-zA-Z_]+)|(\\$|[^$\\\\]+)",
						"minLength": 2,
						"type": "string"
					},
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					},
					"http_to_https": { "type": "boolean" },
					"encode_uri": { "default": false, "type": "boolean" },
					"append_query_string": { "default": false, "type": "boolean" }
				},
				"$comment": "this is a mark for our injected plugin schema",
				"oneOf": [
					{ "required": ["uri"] },
					{ "required": ["regex_uri"] },
					{ "required": ["http_to_https"] }
				],
				"type": "object"
			},
			"priority": 900
		},
		"proxy-control": {
			"version": 0.1,
			"schema": {
				"properties": {
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					},
					"request_buffering": { "default": true, "type": "boolean" }
				},
				"$comment": "this is a mark for our injected plugin schema",
				"type": "object"
			},
			"priority": 21990
		},
		"grpc-web": {
			"version": 0.1,
			"schema": {
				"properties": {
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					}
				},
				"$comment": "this is a mark for our injected plugin schema",
				"type": "object"
			},
			"priority": 505
		},

		"grpc-web-custom": {
			"version": 0.1,
			"schema": {
				"properties": {
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					}
				},
				"$comment": "this is a mark for our injected plugin schema",
				"type": "object"
			},
			"priority": 505
		},
		"prometheus": {
			"version": 0.2,
			"schema": {
				"properties": {
					"prefer_name": { "default": false, "type": "boolean" },
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					}
				},
				"$comment": "this is a mark for our injected plugin schema",
				"type": "object"
			},
			"priority": 500
		},
		"ua-restriction": {
			"version": 0.1,
			"schema": {
				"properties": {
					"message": {
						"default": "Not allowed",
						"maxLength": 1024,
						"minLength": 1,
						"type": "string"
					},
					"bypass_missing": { "default": false, "type": "boolean" },
					"allowlist": {
						"items": { "minLength": 1, "type": "string" },
						"minItems": 1,
						"type": "array"
					},
					"denylist": {
						"items": { "minLength": 1, "type": "string" },
						"minItems": 1,
						"type": "array"
					},
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					}
				},
				"$comment": "this is a mark for our injected plugin schema",
				"oneOf": [{ "required": ["allowlist"] }, { "required": ["denylist"] }],
				"type": "object"
			},
			"priority": 2999
		},
		"loggly": {
			"version": 0.1,
			"schema": {
				"properties": {
					"severity_map": {
						"type": "object",
						"additionalProperties": false,
						"patternProperties": {
							"^[1-5][0-9]{2}$": {
								"description": "keys are HTTP status code, values are severity",
								"enum": [
									"CRIT",
									"crit",
									"ERR",
									"err",
									"EMEGR",
									"emegr",
									"WARNING",
									"warning",
									"INFO",
									"info",
									"DEBUG",
									"debug",
									"NOTICE",
									"notice",
									"ALERT",
									"alert"
								],
								"type": "string"
							}
						},
						"description": "upstream response code vs syslog severity mapping"
					},
					"max_retry_count": { "minimum": 0, "default": 0, "type": "integer" },
					"ssl_verify": { "default": true, "type": "boolean" },
					"name": { "default": "loggly", "type": "string" },
					"buffer_duration": { "minimum": 1, "default": 60, "type": "integer" },
					"inactive_timeout": { "minimum": 1, "default": 5, "type": "integer" },
					"tags": {
						"default": ["apisix"],
						"items": { "pattern": "^(?!tag=)[ -~]*", "type": "string" },
						"minItems": 1,
						"type": "array"
					},
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					},
					"batch_max_size": {
						"minimum": 1,
						"default": 1000,
						"type": "integer"
					},
					"severity": {
						"default": "INFO",
						"description": "base severity log level",
						"enum": [
							"CRIT",
							"crit",
							"ERR",
							"err",
							"EMEGR",
							"emegr",
							"WARNING",
							"warning",
							"INFO",
							"info",
							"DEBUG",
							"debug",
							"NOTICE",
							"notice",
							"ALERT",
							"alert"
						],
						"type": "string"
					},
					"include_resp_body_expr": {
						"items": { "type": "array" },
						"minItems": 1,
						"type": "array"
					},
					"retry_delay": { "minimum": 0, "default": 1, "type": "integer" },
					"include_req_body": { "default": false, "type": "boolean" },
					"customer_token": { "type": "string" },
					"include_resp_body": { "default": false, "type": "boolean" },
					"log_format": { "type": "object" }
				},
				"required": ["customer_token"],
				"$comment": "this is a mark for our injected plugin schema",
				"type": "object"
			},
			"metadata_schema": {
				"properties": {
					"timeout": { "minimum": 1, "default": 5000, "type": "integer" },
					"host": { "default": "logs-01.loggly.com", "type": "string" },
					"protocol": {
						"default": "syslog",
						"enum": ["syslog", "http", "https"],
						"type": "string"
					},
					"port": { "default": 514, "type": "integer" },
					"log_format": { "type": "object" }
				},
				"type": "object"
			},
			"priority": 411
		},
		"kafka-logger": {
			"version": 0.1,
			"schema": {
				"properties": {
					"broker_list": {
						"type": "object",
						"patternProperties": {
							".*": {
								"minimum": 1,
								"maximum": 65535,
								"description": "the port of kafka broker",
								"type": "integer"
							}
						},
						"minProperties": 1
					},
					"meta_format": {
						"default": "default",
						"enum": ["default", "origin"],
						"type": "string"
					},
					"kafka_topic": { "type": "string" },
					"producer_type": {
						"default": "async",
						"enum": ["async", "sync"],
						"type": "string"
					},
					"batch_max_size": {
						"minimum": 1,
						"default": 1000,
						"type": "integer"
					},
					"include_resp_body_expr": {
						"items": { "type": "array" },
						"minItems": 1,
						"type": "array"
					},
					"cluster_name": { "minimum": 1, "default": 1, "type": "integer" },
					"producer_batch_num": {
						"minimum": 1,
						"default": 200,
						"type": "integer"
					},
					"producer_batch_size": {
						"minimum": 0,
						"default": 1048576,
						"type": "integer"
					},
					"producer_max_buffering": {
						"minimum": 1,
						"default": 50000,
						"type": "integer"
					},
					"producer_time_linger": {
						"minimum": 1,
						"default": 1,
						"type": "integer"
					},
					"key": { "type": "string" },
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					},
					"brokers": {
						"uniqueItems": true,
						"items": {
							"properties": {
								"port": {
									"minimum": 1,
									"description": "the port of kafka broker",
									"maximum": 65535,
									"type": "integer"
								},
								"sasl_config": {
									"properties": {
										"password": { "description": "password", "type": "string" },
										"mechanism": {
											"default": "PLAIN",
											"enum": ["PLAIN"],
											"type": "string"
										},
										"user": { "description": "user", "type": "string" }
									},
									"required": ["user", "password"],
									"type": "object",
									"description": "sasl config"
								},
								"host": {
									"description": "the host of kafka broker",
									"type": "string"
								}
							},
							"required": ["host", "port"],
							"type": "object"
						},
						"minItems": 1,
						"type": "array"
					},
					"name": { "default": "kafka logger", "type": "string" },
					"inactive_timeout": { "minimum": 1, "default": 5, "type": "integer" },
					"buffer_duration": { "minimum": 1, "default": 60, "type": "integer" },
					"retry_delay": { "minimum": 0, "default": 1, "type": "integer" },
					"max_retry_count": { "minimum": 0, "default": 0, "type": "integer" },
					"meta_refresh_interval": {
						"minimum": 1,
						"default": 30,
						"type": "integer"
					},
					"timeout": { "minimum": 1, "default": 3, "type": "integer" },
					"required_acks": {
						"default": 1,
						"enum": [0, 1, -1],
						"type": "integer"
					},
					"include_req_body": { "default": false, "type": "boolean" },
					"include_resp_body": { "default": false, "type": "boolean" },
					"include_req_body_expr": {
						"items": { "type": "array" },
						"minItems": 1,
						"type": "array"
					},
					"log_format": { "type": "object" }
				},
				"$comment": "this is a mark for our injected plugin schema",
				"oneOf": [
					{ "required": ["broker_list", "kafka_topic"] },
					{ "required": ["brokers", "kafka_topic"] }
				],
				"type": "object"
			},
			"metadata_schema": {
				"properties": {
					"log_format": {
						"default": {
							"client_ip": "$remote_addr",
							"host": "$host",
							"@timestamp": "$time_iso8601"
						},
						"type": "object"
					}
				},
				"type": "object"
			},
			"priority": 403
		},
		"response-rewrite": {
			"version": 0.1,
			"schema": {
				"properties": {
					"body_base64": {
						"default": false,
						"description": "whether new body for response need base64 decode before return",
						"type": "boolean"
					},
					"headers": {
						"anyOf": [
							{
								"type": "object",
								"patternProperties": {
									"^[^:]+$": {
										"oneOf": [{ "type": "string" }, { "type": "number" }]
									}
								},
								"minProperties": 1
							},
							{
								"properties": {
									"add": {
										"items": {
											"pattern": "^[^:]+:[^:]*[^/]$",
											"type": "string"
										},
										"minItems": 1,
										"type": "array"
									},
									"remove": {
										"items": { "pattern": "^[^:]+$", "type": "string" },
										"minItems": 1,
										"type": "array"
									},
									"set": {
										"type": "object",
										"patternProperties": {
											"^[^:]+$": {
												"oneOf": [{ "type": "string" }, { "type": "number" }]
											}
										},
										"minProperties": 1
									}
								}
							}
						],
						"description": "new headers for response"
					},
					"status_code": {
						"minimum": 200,
						"maximum": 598,
						"description": "new status code for response",
						"type": "integer"
					},
					"filters": {
						"description": "a group of filters that modify response bodyby replacing one specified string by another",
						"items": {
							"properties": {
								"options": {
									"default": "jo",
									"description": "regex options",
									"type": "string"
								},
								"replace": {
									"type": "string",
									"description": "regex substitution content"
								},
								"regex": {
									"description": "match pattern on response body",
									"minLength": 1,
									"type": "string"
								},
								"scope": {
									"default": "once",
									"description": "regex substitution range",
									"enum": ["once", "global"],
									"type": "string"
								}
							},
							"required": ["regex", "replace"],
							"description": "filter that modifies response body",
							"type": "object"
						},
						"minItems": 1,
						"type": "array"
					},
					"vars": { "type": "array" },
					"body": { "type": "string", "description": "new body for response" },
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					}
				},
				"$comment": "this is a mark for our injected plugin schema",
				"dependencies": {
					"body": { "not": { "required": ["filters"] } },
					"filters": { "not": { "required": ["body"] } }
				},
				"type": "object"
			},
			"priority": 899
		},
		"traffic-split": {
			"version": 0.1,
			"schema": {
				"properties": {
					"rules": {
						"items": {
							"properties": {
								"match": {
									"items": {
										"properties": { "vars": { "type": "array" } },
										"type": "object"
									},
									"type": "array"
								},
								"weighted_upstreams": {
									"items": {
										"properties": {
											"upstream_id": {
												"anyOf": [
													{
														"pattern": "^[a-zA-Z0-9-_.]+$",
														"maxLength": 64,
														"minLength": 1,
														"type": "string"
													},
													{ "minimum": 1, "type": "integer" }
												]
											},
											"upstream": {
												"properties": {
													"id": {
														"anyOf": [
															{
																"pattern": "^[a-zA-Z0-9-_.]+$",
																"maxLength": 64,
																"minLength": 1,
																"type": "string"
															},
															{ "minimum": 1, "type": "integer" }
														]
													},
													"keepalive_pool": {
														"properties": {
															"idle_timeout": {
																"default": 60,
																"minimum": 0,
																"type": "number"
															},
															"requests": {
																"default": 1000,
																"minimum": 1,
																"type": "integer"
															},
															"size": {
																"default": 320,
																"minimum": 1,
																"type": "integer"
															}
														},
														"type": "object"
													},
													"create_time": { "type": "integer" },
													"retries": { "minimum": 0, "type": "integer" },
													"retry_timeout": { "minimum": 0, "type": "number" },
													"tls": {
														"properties": {
															"client_key": {
																"maxLength": 65536,
																"minLength": 128,
																"type": "string"
															},
															"verify": {
																"default": false,
																"type": "boolean",
																"description": "Turn on server certificate verification, currently only kafka upstream is supported"
															},
															"client_cert": {
																"maxLength": 65536,
																"minLength": 128,
																"type": "string"
															},
															"client_cert_id": {
																"anyOf": [
																	{
																		"pattern": "^[a-zA-Z0-9-_.]+$",
																		"maxLength": 64,
																		"minLength": 1,
																		"type": "string"
																	},
																	{ "minimum": 1, "type": "integer" }
																]
															}
														},
														"dependencies": {
															"client_cert_id": {
																"not": {
																	"required": ["client_client", "client_key"]
																}
															},
															"client_cert": {
																"not": { "required": ["client_cert_id"] },
																"required": ["client_key"]
															},
															"client_key": {
																"not": { "required": ["client_cert_id"] },
																"required": ["client_cert"]
															}
														},
														"type": "object"
													},
													"checks": {
														"properties": {
															"passive": {
																"properties": {
																	"healthy": {
																		"properties": {
																			"successes": {
																				"minimum": 0,
																				"default": 5,
																				"maximum": 254,
																				"type": "integer"
																			},
																			"http_statuses": {
																				"items": {
																					"minimum": 200,
																					"maximum": 599,
																					"type": "integer"
																				},
																				"uniqueItems": true,
																				"default": [
																					200, 201, 202, 203, 204, 205, 206,
																					207, 208, 226, 300, 301, 302, 303,
																					304, 305, 306, 307, 308
																				],
																				"minItems": 1,
																				"type": "array"
																			}
																		},
																		"type": "object"
																	},
																	"unhealthy": {
																		"properties": {
																			"timeouts": {
																				"minimum": 0,
																				"default": 7,
																				"maximum": 254,
																				"type": "integer"
																			},
																			"http_failures": {
																				"minimum": 0,
																				"default": 5,
																				"maximum": 254,
																				"type": "integer"
																			},
																			"tcp_failures": {
																				"minimum": 0,
																				"default": 2,
																				"maximum": 254,
																				"type": "integer"
																			},
																			"http_statuses": {
																				"items": {
																					"minimum": 200,
																					"maximum": 599,
																					"type": "integer"
																				},
																				"uniqueItems": true,
																				"default": [429, 500, 503],
																				"minItems": 1,
																				"type": "array"
																			}
																		},
																		"type": "object"
																	},
																	"type": {
																		"default": "http",
																		"enum": ["http", "https", "tcp"],
																		"type": "string"
																	}
																},
																"type": "object"
															},
															"active": {
																"properties": {
																	"concurrency": {
																		"default": 10,
																		"type": "integer"
																	},
																	"http_path": {
																		"default": "/",
																		"type": "string"
																	},
																	"https_verify_certificate": {
																		"default": true,
																		"type": "boolean"
																	},
																	"type": {
																		"default": "http",
																		"enum": ["http", "https", "tcp"],
																		"type": "string"
																	},
																	"timeout": { "default": 1, "type": "number" },
																	"req_headers": {
																		"items": {
																			"uniqueItems": true,
																			"type": "string"
																		},
																		"minItems": 1,
																		"type": "array"
																	},
																	"healthy": {
																		"properties": {
																			"successes": {
																				"minimum": 1,
																				"default": 2,
																				"maximum": 254,
																				"type": "integer"
																			},
																			"interval": {
																				"minimum": 1,
																				"default": 1,
																				"type": "integer"
																			},
																			"http_statuses": {
																				"items": {
																					"minimum": 200,
																					"maximum": 599,
																					"type": "integer"
																				},
																				"uniqueItems": true,
																				"default": [200, 302],
																				"minItems": 1,
																				"type": "array"
																			}
																		},
																		"type": "object"
																	},
																	"port": {
																		"minimum": 1,
																		"maximum": 65535,
																		"type": "integer"
																	},
																	"unhealthy": {
																		"properties": {
																			"http_statuses": {
																				"items": {
																					"minimum": 200,
																					"maximum": 599,
																					"type": "integer"
																				},
																				"uniqueItems": true,
																				"default": [
																					429, 404, 500, 501, 502, 503, 504, 505
																				],
																				"minItems": 1,
																				"type": "array"
																			},
																			"interval": {
																				"minimum": 1,
																				"default": 1,
																				"type": "integer"
																			},
																			"http_failures": {
																				"minimum": 1,
																				"default": 5,
																				"maximum": 254,
																				"type": "integer"
																			},
																			"tcp_failures": {
																				"minimum": 1,
																				"default": 2,
																				"maximum": 254,
																				"type": "integer"
																			},
																			"timeouts": {
																				"minimum": 1,
																				"default": 3,
																				"maximum": 254,
																				"type": "integer"
																			}
																		},
																		"type": "object"
																	},
																	"host": {
																		"pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
																		"type": "string"
																	}
																},
																"type": "object"
															}
														},
														"additionalProperties": false,
														"anyOf": [
															{ "required": ["active"] },
															{ "required": ["active", "passive"] }
														],
														"type": "object"
													},
													"timeout": {
														"properties": {
															"send": {
																"exclusiveMinimum": 0,
																"type": "number"
															},
															"read": {
																"exclusiveMinimum": 0,
																"type": "number"
															},
															"connect": {
																"exclusiveMinimum": 0,
																"type": "number"
															}
														},
														"required": ["connect", "send", "read"],
														"type": "object"
													},
													"discovery_type": {
														"type": "string",
														"description": "discovery type"
													},
													"labels": {
														"description": "key/value pairs to specify attributes",
														"patternProperties": {
															".*": {
																"minLength": 1,
																"maxLength": 256,
																"type": "string",
																"pattern": "^\\S+$",
																"description": "value of label"
															}
														},
														"type": "object"
													},
													"discovery_args": {
														"properties": {
															"group_name": {
																"type": "string",
																"description": "group name"
															},
															"namespace_id": {
																"type": "string",
																"description": "namespace id"
															}
														},
														"type": "object"
													},
													"key": {
														"type": "string",
														"description": "the key of chash for dynamic load balancing"
													},
													"name": {
														"type": "string",
														"minLength": 1,
														"maxLength": 100
													},
													"desc": { "maxLength": 256, "type": "string" },
													"update_time": { "type": "integer" },
													"type": {
														"default": "roundrobin",
														"description": "algorithms of load balancing",
														"type": "string"
													},
													"upstream_host": {
														"pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
														"type": "string"
													},
													"pass_host": {
														"default": "pass",
														"description": "mod of host passing",
														"enum": ["pass", "node", "rewrite"],
														"type": "string"
													},
													"hash_on": {
														"default": "vars",
														"enum": [
															"vars",
															"header",
															"cookie",
															"consumer",
															"vars_combinations"
														],
														"type": "string"
													},
													"nodes": {
														"anyOf": [
															{
																"patternProperties": {
																	".*": {
																		"minimum": 0,
																		"description": "weight of node",
																		"type": "integer"
																	}
																},
																"type": "object"
															},
															{
																"items": {
																	"properties": {
																		"host": {
																			"pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
																			"type": "string"
																		},
																		"weight": {
																			"minimum": 0,
																			"description": "weight of node",
																			"type": "integer"
																		},
																		"metadata": {
																			"type": "object",
																			"description": "metadata of node"
																		},
																		"port": {
																			"minimum": 1,
																			"description": "port of node",
																			"type": "integer"
																		},
																		"priority": {
																			"default": 0,
																			"description": "priority of node",
																			"type": "integer"
																		}
																	},
																	"required": ["host", "port", "weight"],
																	"type": "object"
																},
																"type": "array"
															}
														]
													},
													"service_name": {
														"type": "string",
														"minLength": 1,
														"maxLength": 256
													},
													"scheme": {
														"default": "http",
														"enum": [
															"grpc",
															"grpcs",
															"http",
															"https",
															"tcp",
															"tls",
															"udp",
															"kafka"
														],
														"description": "The scheme of the upstream. For L7 proxy, it can be one of grpc/grpcs/http/https. For L4 proxy, it can be one of tcp/tls/udp. For specific protocols, it can be kafka."
													}
												},
												"additionalProperties": false,
												"oneOf": [
													{ "required": ["nodes"] },
													{ "required": ["service_name", "discovery_type"] }
												],
												"type": "object"
											},
											"weight": {
												"default": 1,
												"minimum": 0,
												"description": "used to split traffic between differentupstreams for plugin configuration",
												"type": "integer"
											}
										},
										"type": "object"
									},
									"default": [{ "weight": 1 }],
									"maxItems": 20,
									"minItems": 1,
									"type": "array"
								}
							},
							"type": "object"
						},
						"type": "array"
					},
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					}
				},
				"$comment": "this is a mark for our injected plugin schema",
				"type": "object"
			},
			"priority": 966
		},
		"consumer-restriction": {
			"version": 0.1,
			"schema": {
				"properties": {
					"whitelist": {
						"items": { "type": "string" },
						"minItems": 1,
						"type": "array"
					},
					"allowed_by_methods": {
						"items": {
							"properties": {
								"methods": {
									"items": {
										"description": "HTTP method",
										"enum": [
											"GET",
											"POST",
											"PUT",
											"DELETE",
											"PATCH",
											"HEAD",
											"OPTIONS",
											"CONNECT",
											"TRACE",
											"PURGE"
										],
										"type": "string"
									},
									"minItems": 1,
									"type": "array"
								},
								"user": { "type": "string" }
							},
							"type": "object"
						},
						"type": "array"
					},
					"rejected_msg": { "type": "string" },
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					},
					"rejected_code": {
						"minimum": 200,
						"default": 403,
						"type": "integer"
					},
					"blacklist": {
						"items": { "type": "string" },
						"minItems": 1,
						"type": "array"
					},
					"type": {
						"default": "consumer_name",
						"enum": [
							"consumer_name",
							"service_id",
							"route_id",
							"consumer_group_id"
						],
						"type": "string"
					}
				},
				"$comment": "this is a mark for our injected plugin schema",
				"anyOf": [
					{ "required": ["blacklist"] },
					{ "required": ["whitelist"] },
					{ "required": ["allowed_by_methods"] }
				],
				"type": "object"
			},
			"priority": 2400
		},
		"echo": {
			"version": 0.1,
			"schema": {
				"minProperties": 1,
				"properties": {
					"headers": {
						"minProperties": 1,
						"description": "new headers for response",
						"type": "object"
					},
					"before_body": {
						"type": "string",
						"description": "body before the filter phase."
					},
					"body": {
						"type": "string",
						"description": "body to replace upstream response."
					},
					"after_body": {
						"type": "string",
						"description": "body after the modification of filter phase."
					},
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					}
				},
				"$comment": "this is a mark for our injected plugin schema",
				"anyOf": [
					{ "required": ["before_body"] },
					{ "required": ["body"] },
					{ "required": ["after_body"] }
				],
				"type": "object"
			},
			"priority": 412
		},
		"cas-auth": {
			"version": 0.1,
			"schema": {
				"properties": {
					"cas_callback_uri": { "type": "string" },
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					},
					"idp_uri": { "type": "string" },
					"logout_uri": { "type": "string" }
				},
				"required": ["idp_uri", "cas_callback_uri", "logout_uri"],
				"$comment": "this is a mark for our injected plugin schema",
				"type": "object"
			},
			"priority": 2597
		},
		"openfunction": {
			"version": 0.1,
			"schema": {
				"properties": {
					"timeout": { "minimum": 100, "default": 3000, "type": "integer" },
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					},
					"ssl_verify": { "default": true, "type": "boolean" },
					"authorization": { "service_token": { "type": "string" } },
					"keepalive_pool": { "minimum": 1, "default": 5, "type": "integer" },
					"function_uri": { "type": "string" },
					"keepalive_timeout": {
						"minimum": 1000,
						"default": 60000,
						"type": "integer"
					},
					"keepalive": { "default": true, "type": "boolean" }
				},
				"required": ["function_uri"],
				"$comment": "this is a mark for our injected plugin schema",
				"type": "object"
			},
			"priority": -1902
		},
		"body-transformer": {
			"version": 0.1,
			"schema": {
				"properties": {
					"request": {
						"properties": {
							"input_format": { "enum": ["xml", "json"], "type": "string" },
							"template": { "type": "string" }
						},
						"required": ["template"],
						"type": "object"
					},
					"response": {
						"properties": {
							"input_format": { "enum": ["xml", "json"], "type": "string" },
							"template": { "type": "string" }
						},
						"required": ["template"],
						"type": "object"
					},
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					}
				},
				"$comment": "this is a mark for our injected plugin schema",
				"anyOf": [
					{ "required": ["request"] },
					{ "required": ["response"] },
					{ "required": ["request", "response"] }
				],
				"type": "object"
			},
			"priority": 1080
		},
		"loki-logger": {
			"version": 0.1,
			"schema": {
				"properties": {
					"keepalive_pool": { "minimum": 1, "default": 5, "type": "integer" },
					"keepalive": { "default": true, "type": "boolean" },
					"timeout": {
						"minimum": 1,
						"default": 3000,
						"description": "timeout in milliseconds",
						"type": "integer",
						"maximum": 60000
					},
					"batch_max_size": {
						"minimum": 1,
						"default": 1000,
						"type": "integer"
					},
					"max_retry_count": { "minimum": 0, "default": 0, "type": "integer" },
					"retry_delay": { "minimum": 0, "default": 1, "type": "integer" },
					"buffer_duration": { "minimum": 1, "default": 60, "type": "integer" },
					"include_resp_body": { "default": false, "type": "boolean" },
					"endpoint_addrs": {
						"items": {
							"pattern": "^[^\\/]+:\\/\\/([\\da-zA-Z.-]+|\\[[\\da-fA-F:]+\\])(:\\d+)?",
							"type": "string"
						},
						"minItems": 1,
						"type": "array"
					},
					"endpoint_uri": {
						"default": "/loki/api/v1/push",
						"minLength": 1,
						"type": "string"
					},
					"keepalive_timeout": {
						"minimum": 1000,
						"description": "keepalive timeout in milliseconds",
						"default": 60000,
						"type": "integer"
					},
					"tenant_id": { "default": "fake", "type": "string" },
					"inactive_timeout": { "minimum": 1, "default": 5, "type": "integer" },
					"log_labels": {
						"default": { "job": "apisix" },
						"patternProperties": { ".*": { "minLength": 1, "type": "string" } },
						"type": "object"
					},
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					},
					"name": { "default": "loki logger", "type": "string" },
					"include_resp_body_expr": {
						"items": { "type": "array" },
						"minItems": 1,
						"type": "array"
					},
					"include_req_body": { "default": false, "type": "boolean" },
					"ssl_verify": { "default": false, "type": "boolean" },
					"include_req_body_expr": {
						"items": { "type": "array" },
						"minItems": 1,
						"type": "array"
					},
					"log_format": { "type": "object" }
				},
				"required": ["endpoint_addrs"],
				"$comment": "this is a mark for our injected plugin schema",
				"type": "object"
			},
			"metadata_schema": {
				"properties": {
					"log_format": {
						"default": {
							"client_ip": "$remote_addr",
							"host": "$host",
							"@timestamp": "$time_iso8601"
						},
						"type": "object"
					}
				},
				"type": "object"
			},
			"priority": 414
		},
		"authz-keycloak": {
			"version": 0.1,
			"schema": {
				"required": ["client_id"],
				"allOf": [
					{
						"anyOf": [
							{ "required": ["discovery"] },
							{ "required": ["token_endpoint"] }
						]
					},
					{
						"anyOf": [
							{ "properties": { "lazy_load_paths": { "enum": [false] } } },
							{
								"properties": { "lazy_load_paths": { "enum": [true] } },
								"anyOf": [
									{ "required": ["discovery"] },
									{ "required": ["resource_registration_endpoint"] }
								]
							}
						]
					}
				],
				"properties": {
					"keepalive_pool": { "minimum": 1, "default": 5, "type": "integer" },
					"keepalive": { "default": true, "type": "boolean" },
					"timeout": { "minimum": 1000, "default": 3000, "type": "integer" },
					"ssl_verify": { "default": true, "type": "boolean" },
					"discovery": { "maxLength": 4096, "minLength": 1, "type": "string" },
					"token_endpoint": {
						"maxLength": 4096,
						"minLength": 1,
						"type": "string"
					},
					"resource_registration_endpoint": {
						"maxLength": 4096,
						"minLength": 1,
						"type": "string"
					},
					"client_secret": {
						"maxLength": 100,
						"minLength": 1,
						"type": "string"
					},
					"grant_type": {
						"minLength": 1,
						"maxLength": 100,
						"default": "urn:ietf:params:oauth:grant-type:uma-ticket",
						"enum": ["urn:ietf:params:oauth:grant-type:uma-ticket"],
						"type": "string"
					},
					"policy_enforcement_mode": {
						"default": "ENFORCING",
						"enum": ["ENFORCING", "PERMISSIVE"],
						"type": "string"
					},
					"keepalive_timeout": {
						"minimum": 1000,
						"default": 60000,
						"type": "integer"
					},
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					},
					"permissions": {
						"default": {},
						"items": { "maxLength": 100, "minLength": 1, "type": "string" },
						"uniqueItems": true,
						"type": "array"
					},
					"lazy_load_paths": { "default": false, "type": "boolean" },
					"client_id": { "maxLength": 100, "minLength": 1, "type": "string" },
					"cache_ttl_seconds": {
						"minimum": 1,
						"default": 86400,
						"type": "integer"
					},
					"access_denied_redirect_uri": {
						"maxLength": 2048,
						"minLength": 1,
						"type": "string"
					},
					"access_token_expires_in": {
						"minimum": 1,
						"default": 300,
						"type": "integer"
					},
					"access_token_expires_leeway": {
						"minimum": 0,
						"default": 0,
						"type": "integer"
					},
					"refresh_token_expires_in": {
						"minimum": 1,
						"default": 3600,
						"type": "integer"
					},
					"refresh_token_expires_leeway": {
						"minimum": 0,
						"default": 0,
						"type": "integer"
					},
					"password_grant_token_generation_incoming_uri": {
						"maxLength": 4096,
						"minLength": 1,
						"type": "string"
					},
					"http_method_as_scope": { "default": false, "type": "boolean" }
				},
				"$comment": "this is a mark for our injected plugin schema",
				"encrypt_fields": ["client_secret"],
				"type": "object"
			},
			"priority": 2000
		},
		"client-control": {
			"version": 0.1,
			"schema": {
				"properties": {
					"max_body_size": { "minimum": 0, "type": "integer" },
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					}
				},
				"$comment": "this is a mark for our injected plugin schema",
				"type": "object"
			},
			"priority": 22000
		},
		"openwhisk": {
			"version": 0.1,
			"schema": {
				"properties": {
					"keepalive_pool": { "minimum": 1, "default": 5, "type": "integer" },
					"action": {
						"type": "string",
						"pattern": "\\A([\\w]|[\\w][\\w@ .-]*[\\w@.-]+)\\z",
						"maxLength": 256
					},
					"api_host": { "type": "string" },
					"keepalive": { "default": true, "type": "boolean" },
					"service_token": { "type": "string" },
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					},
					"ssl_verify": { "default": true, "type": "boolean" },
					"keepalive_timeout": {
						"minimum": 1000,
						"default": 60000,
						"type": "integer"
					},
					"namespace": {
						"type": "string",
						"pattern": "\\A([\\w]|[\\w][\\w@ .-]*[\\w@.-]+)\\z",
						"maxLength": 256
					},
					"result": { "default": true, "type": "boolean" },
					"package": {
						"type": "string",
						"pattern": "\\A([\\w]|[\\w][\\w@ .-]*[\\w@.-]+)\\z",
						"maxLength": 256
					},
					"timeout": {
						"minimum": 1,
						"default": 3000,
						"description": "timeout in milliseconds",
						"type": "integer",
						"maximum": 60000
					}
				},
				"required": ["api_host", "service_token", "namespace", "action"],
				"$comment": "this is a mark for our injected plugin schema",
				"type": "object"
			},
			"priority": -1901
		},
		"basic-auth": {
			"consumer_schema": {
				"required": ["username", "password"],
				"title": "work with consumer object",
				"properties": {
					"username": { "type": "string" },
					"password": { "type": "string" }
				},
				"encrypt_fields": ["password"],
				"type": "object"
			},
			"version": 0.1,
			"schema": {
				"properties": {
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					},
					"hide_credentials": { "default": false, "type": "boolean" }
				},
				"$comment": "this is a mark for our injected plugin schema",
				"title": "work with route or service object",
				"type": "object"
			},
			"type": "auth",
			"priority": 2520
		},
		"aws-lambda": {
			"version": 0.1,
			"schema": {
				"properties": {
					"timeout": { "minimum": 100, "default": 3000, "type": "integer" },
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					},
					"ssl_verify": { "default": true, "type": "boolean" },
					"authorization": {
						"properties": {
							"apikey": { "type": "string" },
							"iam": {
								"properties": {
									"secretkey": {
										"description": "secret access key from from aws iam console",
										"type": "string"
									},
									"service": {
										"default": "execute-api",
										"description": "the service that is receiving the request",
										"type": "string"
									},
									"accesskey": {
										"description": "access key id from from aws iam console",
										"type": "string"
									},
									"aws_region": {
										"default": "us-east-1",
										"description": "the aws region that is receiving the request",
										"type": "string"
									}
								},
								"required": ["accesskey", "secretkey"],
								"type": "object"
							}
						},
						"type": "object"
					},
					"keepalive_pool": { "minimum": 1, "default": 5, "type": "integer" },
					"function_uri": { "type": "string" },
					"keepalive_timeout": {
						"minimum": 1000,
						"default": 60000,
						"type": "integer"
					},
					"keepalive": { "default": true, "type": "boolean" }
				},
				"required": ["function_uri"],
				"$comment": "this is a mark for our injected plugin schema",
				"type": "object"
			},
			"priority": -1899
		},
		"ai": {
			"version": 0.1,
			"schema": {
				"properties": {
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					}
				},
				"$comment": "this is a mark for our injected plugin schema"
			},
			"priority": 22900,
			"scope": "global"
		},
		"openid-connect": {
			"version": 0.2,
			"schema": {
				"required": ["client_id", "client_secret", "discovery"],
				"properties": {
					"session": {
						"properties": {
							"secret": {
								"type": "string",
								"minLength": 16,
								"description": "the key used for the encrypt and HMAC calculation"
							}
						},
						"required": ["secret"],
						"additionalProperties": false,
						"type": "object"
					},
					"access_token_in_authorization_header": {
						"default": false,
						"description": "Whether the access token should be added in the Authorization header as opposed to the X-Access-Token header.",
						"type": "boolean"
					},
					"set_id_token_header": {
						"default": true,
						"description": "Whether the ID token should be added in the X-ID-Token header to the request for downstream.",
						"type": "boolean"
					},
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					},
					"timeout": {
						"minimum": 1,
						"description": "timeout in seconds",
						"default": 3,
						"type": "integer"
					},
					"ssl_verify": { "default": false, "type": "boolean" },
					"introspection_endpoint": { "type": "string" },
					"discovery": { "type": "string" },
					"bearer_only": { "default": false, "type": "boolean" },
					"client_secret": { "type": "string" },
					"realm": { "default": "apisix", "type": "string" },
					"logout_path": { "default": "/logout", "type": "string" },
					"redirect_uri": {
						"description": "use ngx.var.request_uri if not configured",
						"type": "string"
					},
					"client_id": { "type": "string" },
					"post_logout_redirect_uri": {
						"description": "the URI will be redirect when request logout_path",
						"type": "string"
					},
					"set_refresh_token_header": {
						"default": false,
						"description": "Whether the refresh token should be added in the X-Refresh-Token header to the request for downstream.",
						"type": "boolean"
					},
					"unauth_action": {
						"default": "auth",
						"description": "The action performed when client is not authorized. Use auth to redirect user to identity provider, deny to respond with 401 Unauthorized, and pass to allow the request regardless.",
						"enum": ["auth", "deny", "pass"],
						"type": "string"
					},
					"set_userinfo_header": {
						"default": true,
						"description": "Whether the user info token should be added in the X-Userinfo header to the request for downstream.",
						"type": "boolean"
					},
					"proxy_opts": {
						"properties": {
							"no_proxy": {
								"description": "Comma separated list of hosts that should not be proxied.",
								"type": "string"
							},
							"https_proxy_authorization": {
								"description": "Basic [base64 username:password].",
								"type": "string"
							},
							"http_proxy_authorization": {
								"description": "Basic [base64 username:password].",
								"type": "string"
							},
							"http_proxy": {
								"description": "HTTP proxy like: http://proxy-server:80.",
								"type": "string"
							},
							"https_proxy": {
								"description": "HTTPS proxy like: http://proxy-server:80.",
								"type": "string"
							}
						},
						"description": "HTTP proxy server be used to access identity server.",
						"type": "object"
					},
					"scope": { "default": "openid", "type": "string" },
					"public_key": { "type": "string" },
					"token_signing_alg_values_expected": { "type": "string" },
					"use_pkce": {
						"default": false,
						"description": "when set to true the PKEC(Proof Key for Code Exchange) will be used.",
						"type": "boolean"
					},
					"introspection_endpoint_auth_method": {
						"default": "client_secret_basic",
						"type": "string"
					},
					"set_access_token_header": {
						"default": true,
						"description": "Whether the access token should be added as a header to the request for downstream",
						"type": "boolean"
					}
				},
				"$comment": "this is a mark for our injected plugin schema",
				"encrypt_fields": ["client_secret"],
				"type": "object"
			},
			"priority": 2599
		},
		"udp-logger": {
			"version": 0.1,
			"schema": {
				"properties": {
					"host": { "type": "string" },
					"name": { "default": "udp logger", "type": "string" },
					"inactive_timeout": { "minimum": 1, "default": 5, "type": "integer" },
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					},
					"timeout": { "minimum": 1, "default": 3, "type": "integer" },
					"batch_max_size": {
						"minimum": 1,
						"default": 1000,
						"type": "integer"
					},
					"max_retry_count": { "minimum": 0, "default": 0, "type": "integer" },
					"retry_delay": { "minimum": 0, "default": 1, "type": "integer" },
					"include_req_body": { "default": false, "type": "boolean" },
					"port": { "minimum": 0, "type": "integer" },
					"buffer_duration": { "minimum": 1, "default": 60, "type": "integer" },
					"log_format": { "type": "object" }
				},
				"required": ["host", "port"],
				"$comment": "this is a mark for our injected plugin schema",
				"type": "object"
			},
			"priority": 400,
			"metadata_schema": {
				"properties": {
					"log_format": {
						"default": {
							"client_ip": "$remote_addr",
							"host": "$host",
							"@timestamp": "$time_iso8601"
						},
						"type": "object"
					}
				},
				"type": "object"
			}
		},
		"limit-req": {
			"version": 0.1,
			"schema": {
				"properties": {
					"key": { "type": "string" },
					"rejected_code": {
						"minimum": 200,
						"default": 503,
						"maximum": 599,
						"type": "integer"
					},
					"rejected_msg": { "minLength": 1, "type": "string" },
					"nodelay": { "default": false, "type": "boolean" },
					"burst": { "minimum": 0, "type": "number" },
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					},
					"key_type": {
						"default": "var",
						"enum": ["var", "var_combination"],
						"type": "string"
					},
					"allow_degradation": { "default": false, "type": "boolean" },
					"rate": { "exclusiveMinimum": 0, "type": "number" }
				},
				"required": ["rate", "burst", "key"],
				"$comment": "this is a mark for our injected plugin schema",
				"type": "object"
			},
			"priority": 1001
		},
		"ldap-auth": {
			"consumer_schema": {
				"properties": { "user_dn": { "type": "string" } },
				"required": ["user_dn"],
				"title": "work with consumer object",
				"type": "object"
			},
			"version": 0.1,
			"schema": {
				"required": ["base_dn", "ldap_uri"],
				"title": "work with route or service object",
				"properties": {
					"base_dn": { "type": "string" },
					"ldap_uri": { "type": "string" },
					"use_tls": { "default": false, "type": "boolean" },
					"uid": { "default": "cn", "type": "string" },
					"tls_verify": { "default": false, "type": "boolean" },
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					}
				},
				"$comment": "this is a mark for our injected plugin schema",
				"type": "object"
			},
			"type": "auth",
			"priority": 2540
		},
		"splunk-hec-logging": {
			"version": 0.1,
			"schema": {
				"properties": {
					"name": { "default": "splunk-hec-logging", "type": "string" },
					"inactive_timeout": { "minimum": 1, "default": 5, "type": "integer" },
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					},
					"batch_max_size": {
						"minimum": 1,
						"default": 1000,
						"type": "integer"
					},
					"ssl_verify": { "default": true, "type": "boolean" },
					"retry_delay": { "minimum": 0, "default": 1, "type": "integer" },
					"buffer_duration": { "minimum": 1, "default": 60, "type": "integer" },
					"endpoint": {
						"properties": {
							"timeout": { "minimum": 1, "default": 10, "type": "integer" },
							"token": { "type": "string" },
							"channel": { "type": "string" },
							"uri": {
								"pattern": "^[^\\/]+:\\/\\/([\\da-zA-Z.-]+|\\[[\\da-fA-F:]+\\])(:\\d+)?",
								"type": "string"
							}
						},
						"required": ["uri", "token"],
						"type": "object"
					},
					"max_retry_count": { "minimum": 0, "default": 0, "type": "integer" },
					"log_format": { "type": "object" }
				},
				"required": ["endpoint"],
				"$comment": "this is a mark for our injected plugin schema",
				"type": "object"
			},
			"priority": 409,
			"metadata_schema": {
				"properties": {
					"log_format": {
						"default": {
							"client_ip": "$remote_addr",
							"host": "$host",
							"@timestamp": "$time_iso8601"
						},
						"type": "object"
					}
				},
				"type": "object"
			}
		},
		"ext-plugin-post-req": {
			"version": 0.1,
			"schema": {
				"properties": {
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					},
					"allow_degradation": { "default": false, "type": "boolean" },
					"conf": {
						"items": {
							"properties": {
								"value": { "type": "string" },
								"name": { "type": "string", "minLength": 1, "maxLength": 128 }
							},
							"required": ["name", "value"],
							"type": "object"
						},
						"minItems": 1,
						"type": "array"
					}
				},
				"$comment": "this is a mark for our injected plugin schema",
				"type": "object"
			},
			"priority": -3000
		},
		"google-cloud-logging": {
			"version": 0.1,
			"schema": {
				"oneOf": [
					{ "required": ["auth_config"] },
					{ "required": ["auth_file"] }
				],
				"properties": {
					"name": { "default": "google-cloud-logging", "type": "string" },
					"resource": {
						"properties": {
							"labels": { "type": "object" },
							"type": { "type": "string" }
						},
						"required": ["type"],
						"default": { "type": "global" },
						"type": "object"
					},
					"inactive_timeout": { "minimum": 1, "default": 5, "type": "integer" },
					"ssl_verify": { "default": true, "type": "boolean" },
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					},
					"auth_config": {
						"properties": {
							"client_email": { "type": "string" },
							"private_key": { "type": "string" },
							"project_id": { "type": "string" },
							"token_uri": {
								"default": "https://oauth2.googleapis.com/token",
								"type": "string"
							},
							"scopes": {
								"items": {
									"type": "string",
									"description": "Google OAuth2 Authorization Scopes"
								},
								"uniqueItems": true,
								"default": [
									"https://www.googleapis.com/auth/logging.read",
									"https://www.googleapis.com/auth/logging.write",
									"https://www.googleapis.com/auth/logging.admin",
									"https://www.googleapis.com/auth/cloud-platform"
								],
								"minItems": 1,
								"type": "array"
							},
							"entries_uri": {
								"default": "https://logging.googleapis.com/v2/entries:write",
								"type": "string"
							}
						},
						"required": [
							"client_email",
							"private_key",
							"project_id",
							"token_uri"
						],
						"type": "object"
					},
					"batch_max_size": {
						"minimum": 1,
						"default": 1000,
						"type": "integer"
					},
					"max_retry_count": { "minimum": 0, "default": 0, "type": "integer" },
					"retry_delay": { "minimum": 0, "default": 1, "type": "integer" },
					"buffer_duration": { "minimum": 1, "default": 60, "type": "integer" },
					"auth_file": { "type": "string" },
					"log_id": { "default": "apisix.apache.org%2Flogs", "type": "string" },
					"log_format": { "type": "object" }
				},
				"$comment": "this is a mark for our injected plugin schema",
				"encrypt_fields": ["auth_config.private_key"],
				"type": "object"
			},
			"priority": 407,
			"metadata_schema": {
				"properties": {
					"log_format": {
						"default": {
							"client_ip": "$remote_addr",
							"host": "$host",
							"@timestamp": "$time_iso8601"
						},
						"type": "object"
					}
				},
				"type": "object"
			}
		},
		"ext-plugin-pre-req": {
			"version": 0.1,
			"schema": {
				"properties": {
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					},
					"allow_degradation": { "default": false, "type": "boolean" },
					"conf": {
						"items": {
							"properties": {
								"value": { "type": "string" },
								"name": { "type": "string", "minLength": 1, "maxLength": 128 }
							},
							"required": ["name", "value"],
							"type": "object"
						},
						"minItems": 1,
						"type": "array"
					}
				},
				"$comment": "this is a mark for our injected plugin schema",
				"type": "object"
			},
			"priority": 12000
		},
		"clickhouse-logger": {
			"version": 0.1,
			"schema": {
				"oneOf": [
					{
						"required": [
							"endpoint_addr",
							"user",
							"password",
							"database",
							"logtable"
						]
					},
					{
						"required": [
							"endpoint_addrs",
							"user",
							"password",
							"database",
							"logtable"
						]
					}
				],
				"properties": {
					"password": { "default": "", "type": "string" },
					"user": { "default": "", "type": "string" },
					"timeout": { "minimum": 1, "default": 3, "type": "integer" },
					"batch_max_size": {
						"minimum": 1,
						"default": 1000,
						"type": "integer"
					},
					"max_retry_count": { "minimum": 0, "default": 0, "type": "integer" },
					"retry_delay": { "minimum": 0, "default": 1, "type": "integer" },
					"buffer_duration": { "minimum": 1, "default": 60, "type": "integer" },
					"include_resp_body": { "default": false, "type": "boolean" },
					"endpoint_addr": {
						"pattern": "^[^\\/]+:\\/\\/([\\da-zA-Z.-]+|\\[[\\da-fA-F:]+\\])(:\\d+)?",
						"type": "string"
					},
					"endpoint_addrs": {
						"items": {
							"pattern": "^[^\\/]+:\\/\\/([\\da-zA-Z.-]+|\\[[\\da-fA-F:]+\\])(:\\d+)?",
							"type": "string"
						},
						"minItems": 1,
						"type": "array"
					},
					"name": { "default": "clickhouse-logger", "type": "string" },
					"inactive_timeout": { "minimum": 1, "default": 5, "type": "integer" },
					"database": { "default": "", "type": "string" },
					"logtable": { "default": "", "type": "string" },
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					},
					"include_resp_body_expr": {
						"items": { "type": "array" },
						"minItems": 1,
						"type": "array"
					},
					"include_req_body": { "default": false, "type": "boolean" },
					"ssl_verify": { "default": true, "type": "boolean" },
					"include_req_body_expr": {
						"items": { "type": "array" },
						"minItems": 1,
						"type": "array"
					},
					"log_format": { "type": "object" }
				},
				"$comment": "this is a mark for our injected plugin schema",
				"encrypt_fields": ["password"],
				"type": "object"
			},
			"metadata_schema": {
				"properties": {
					"log_format": {
						"default": {
							"client_ip": "$remote_addr",
							"host": "$host",
							"@timestamp": "$time_iso8601"
						},
						"type": "object"
					}
				},
				"type": "object"
			},
			"priority": 398
		},
		"request-validation": {
			"version": 0.1,
			"schema": {
				"properties": {
					"body_schema": { "type": "object" },
					"rejected_code": {
						"minimum": 200,
						"default": 400,
						"maximum": 599,
						"type": "integer"
					},
					"rejected_msg": {
						"maxLength": 256,
						"minLength": 1,
						"type": "string"
					},
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					},
					"header_schema": { "type": "object" }
				},
				"$comment": "this is a mark for our injected plugin schema",
				"anyOf": [
					{ "required": ["header_schema"] },
					{ "required": ["body_schema"] }
				],
				"type": "object"
			},
			"type": "validation",
			"priority": 2800
		},
		"key-auth": {
			"consumer_schema": {
				"properties": { "key": { "type": "string" } },
				"required": ["key"],
				"encrypt_fields": ["key"],
				"type": "object"
			},
			"version": 0.1,
			"schema": {
				"properties": {
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					},
					"hide_credentials": { "default": false, "type": "boolean" },
					"query": { "default": "apikey", "type": "string" },
					"header": { "default": "apikey", "type": "string" }
				},
				"$comment": "this is a mark for our injected plugin schema",
				"type": "object"
			},
			"type": "auth",
			"priority": 2500
		},
		"authz-casdoor": {
			"version": 0.1,
			"schema": {
				"required": [
					"callback_url",
					"endpoint_addr",
					"client_id",
					"client_secret"
				],
				"properties": {
					"callback_url": { "pattern": "^[^%?]+[^/]$", "type": "string" },
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					},
					"client_id": { "type": "string" },
					"endpoint_addr": { "pattern": "^[^%?]+[^/]$", "type": "string" },
					"client_secret": { "type": "string" }
				},
				"$comment": "this is a mark for our injected plugin schema",
				"encrypt_fields": ["client_secret"],
				"type": "object"
			},
			"priority": 2559
		},
		"forward-auth": {
			"version": 0.1,
			"schema": {
				"properties": {
					"upstream_headers": {
						"default": {},
						"items": { "type": "string" },
						"description": "authorization response header that will be sent to the upstream",
						"type": "array"
					},
					"keepalive_timeout": {
						"minimum": 1000,
						"default": 60000,
						"type": "integer"
					},
					"client_headers": {
						"default": {},
						"items": { "type": "string" },
						"description": "authorization response header that will be sent tothe client when authorizing failed",
						"type": "array"
					},
					"keepalive": { "default": true, "type": "boolean" },
					"timeout": {
						"minimum": 1,
						"default": 3000,
						"description": "timeout in milliseconds",
						"type": "integer",
						"maximum": 60000
					},
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					},
					"ssl_verify": { "default": true, "type": "boolean" },
					"uri": { "type": "string" },
					"keepalive_pool": { "minimum": 1, "default": 5, "type": "integer" },
					"request_headers": {
						"default": {},
						"items": { "type": "string" },
						"description": "client request header that will be sent to the authorization service",
						"type": "array"
					},
					"allow_degradation": { "default": false, "type": "boolean" },
					"request_method": {
						"default": "GET",
						"description": "the method for client to request the authorization service",
						"enum": ["GET", "POST"],
						"type": "string"
					}
				},
				"required": ["uri"],
				"$comment": "this is a mark for our injected plugin schema",
				"type": "object"
			},
			"priority": 2002
		},
		"public-api": {
			"version": 0.1,
			"schema": {
				"properties": {
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					},
					"uri": { "type": "string" }
				},
				"$comment": "this is a mark for our injected plugin schema",
				"type": "object"
			},
			"priority": 501
		},
		"workflow": {
			"version": 0.1,
			"schema": {
				"properties": {
					"rules": {
						"items": {
							"properties": {
								"actions": {
									"items": { "minItems": 1, "type": "array" },
									"type": "array"
								},
								"case": {
									"items": {
										"anyOf": [{ "type": "array" }, { "type": "string" }]
									},
									"minItems": 1,
									"type": "array"
								}
							},
							"required": ["case", "actions"],
							"type": "object"
						},
						"type": "array"
					},
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					}
				},
				"required": ["rules"],
				"$comment": "this is a mark for our injected plugin schema",
				"type": "object"
			},
			"priority": 1006
		},
		"csrf": {
			"version": 0.1,
			"schema": {
				"required": ["key"],
				"properties": {
					"key": {
						"type": "string",
						"description": "use to generate csrf token"
					},
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					},
					"expires": {
						"default": 7200,
						"description": "expires time(s) for csrf token",
						"type": "integer"
					},
					"name": {
						"default": "apisix-csrf-token",
						"description": "the csrf token name",
						"type": "string"
					}
				},
				"$comment": "this is a mark for our injected plugin schema",
				"encrypt_fields": ["key"],
				"type": "object"
			},
			"priority": 2980
		},
		"rocketmq-logger": {
			"version": 0.1,
			"schema": {
				"required": ["nameserver_list", "topic"],
				"properties": {
					"secret_key": { "default": "", "type": "string" },
					"meta_format": {
						"default": "default",
						"enum": ["default", "origin"],
						"type": "string"
					},
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					},
					"timeout": { "minimum": 1, "default": 3, "type": "integer" },
					"batch_max_size": {
						"minimum": 1,
						"default": 1000,
						"type": "integer"
					},
					"max_retry_count": { "minimum": 0, "default": 0, "type": "integer" },
					"retry_delay": { "minimum": 0, "default": 1, "type": "integer" },
					"buffer_duration": { "minimum": 1, "default": 60, "type": "integer" },
					"include_resp_body": { "default": false, "type": "boolean" },
					"key": { "type": "string" },
					"name": { "default": "rocketmq logger", "type": "string" },
					"nameserver_list": {
						"items": { "type": "string" },
						"minItems": 1,
						"type": "array"
					},
					"access_key": { "default": "", "type": "string" },
					"tag": { "type": "string" },
					"inactive_timeout": { "minimum": 1, "default": 5, "type": "integer" },
					"use_tls": { "default": false, "type": "boolean" },
					"topic": { "type": "string" },
					"include_req_body": { "default": false, "type": "boolean" },
					"include_resp_body_expr": {
						"items": { "type": "array" },
						"minItems": 1,
						"type": "array"
					},
					"include_req_body_expr": {
						"items": { "type": "array" },
						"minItems": 1,
						"type": "array"
					},
					"log_format": { "type": "object" }
				},
				"$comment": "this is a mark for our injected plugin schema",
				"encrypt_fields": ["secret_key"],
				"type": "object"
			},
			"metadata_schema": {
				"properties": {
					"log_format": {
						"default": {
							"client_ip": "$remote_addr",
							"host": "$host",
							"@timestamp": "$time_iso8601"
						},
						"type": "object"
					}
				},
				"type": "object"
			},
			"priority": 402
		},
		"mocking": {
			"version": 0.1,
			"schema": {
				"properties": {
					"delay": { "default": 0, "type": "integer" },
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					},
					"response_headers": {
						"type": "object",
						"patternProperties": {
							"^[^:]+$": {
								"oneOf": [{ "type": "string" }, { "type": "number" }]
							}
						},
						"minProperties": 1
					},
					"response_status": {
						"default": 200,
						"minimum": 100,
						"type": "integer"
					},
					"content_type": {
						"default": "application/json;charset=utf8",
						"type": "string"
					},
					"response_example": { "type": "string" },
					"response_schema": { "type": "object" },
					"with_mock_header": { "default": true, "type": "boolean" }
				},
				"$comment": "this is a mark for our injected plugin schema",
				"anyOf": [
					{ "required": ["response_example"] },
					{ "required": ["response_schema"] }
				],
				"type": "object"
			},
			"priority": 10900
		},
		"ip-restriction": {
			"version": 0.1,
			"schema": {
				"properties": {
					"message": {
						"default": "Your IP address is not allowed",
						"maxLength": 1024,
						"minLength": 1,
						"type": "string"
					},
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					},
					"whitelist": {
						"items": {
							"anyOf": [
								{ "format": "ipv4", "title": "IPv4", "type": "string" },
								{
									"pattern": "^([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])/([12]?[0-9]|3[0-2])$",
									"title": "IPv4/CIDR",
									"type": "string"
								},
								{ "format": "ipv6", "title": "IPv6", "type": "string" },
								{
									"pattern": "^([a-fA-F0-9]{0,4}:){1,8}(:[a-fA-F0-9]{0,4}){0,8}([a-fA-F0-9]{0,4})?/[0-9]{1,3}$",
									"title": "IPv6/CIDR",
									"type": "string"
								}
							]
						},
						"minItems": 1,
						"type": "array"
					},
					"blacklist": {
						"items": {
							"anyOf": [
								{ "format": "ipv4", "title": "IPv4", "type": "string" },
								{
									"pattern": "^([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])/([12]?[0-9]|3[0-2])$",
									"title": "IPv4/CIDR",
									"type": "string"
								},
								{ "format": "ipv6", "title": "IPv6", "type": "string" },
								{
									"pattern": "^([a-fA-F0-9]{0,4}:){1,8}(:[a-fA-F0-9]{0,4}){0,8}([a-fA-F0-9]{0,4})?/[0-9]{1,3}$",
									"title": "IPv6/CIDR",
									"type": "string"
								}
							]
						},
						"minItems": 1,
						"type": "array"
					}
				},
				"$comment": "this is a mark for our injected plugin schema",
				"oneOf": [{ "required": ["whitelist"] }, { "required": ["blacklist"] }],
				"type": "object"
			},
			"priority": 3000
		},
		"proxy-cache": {
			"version": 0.2,
			"schema": {
				"properties": {
					"cache_http_status": {
						"items": {
							"minimum": 200,
							"maximum": 599,
							"description": "http response status",
							"type": "integer"
						},
						"uniqueItems": true,
						"default": [200, 301, 404],
						"minItems": 1,
						"type": "array"
					},
					"cache_ttl": { "minimum": 1, "default": 300, "type": "integer" },
					"cache_method": {
						"items": {
							"description": "supported http method",
							"enum": ["GET", "POST", "HEAD"],
							"type": "string"
						},
						"uniqueItems": true,
						"default": ["GET", "HEAD"],
						"minItems": 1,
						"type": "array"
					},
					"hide_cache_headers": { "default": false, "type": "boolean" },
					"cache_control": { "default": false, "type": "boolean" },
					"cache_bypass": {
						"items": {
							"pattern": "(^[^\\$].+$|^\\$[0-9a-zA-Z_]+$)",
							"type": "string"
						},
						"minItems": 1,
						"type": "array"
					},
					"no_cache": {
						"items": {
							"pattern": "(^[^\\$].+$|^\\$[0-9a-zA-Z_]+$)",
							"type": "string"
						},
						"minItems": 1,
						"type": "array"
					},
					"cache_zone": {
						"default": "disk_cache_one",
						"maxLength": 100,
						"minLength": 1,
						"type": "string"
					},
					"cache_strategy": {
						"default": "disk",
						"enum": ["disk", "memory"],
						"type": "string"
					},
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					},
					"cache_key": {
						"default": ["$host", "$request_uri"],
						"items": {
							"description": "a key for caching",
							"pattern": "(^[^\\$].+$|^\\$[0-9a-zA-Z_]+$)",
							"type": "string"
						},
						"minItems": 1,
						"type": "array"
					}
				},
				"$comment": "this is a mark for our injected plugin schema",
				"type": "object"
			},
			"priority": 1085
		},
		"proxy-rewrite": {
			"version": 0.1,
			"schema": {
				"properties": {
					"host": {
						"description": "new host for upstream",
						"pattern": "^[0-9a-zA-Z-.]+(:\\d{1,5})?$",
						"type": "string"
					},
					"method": {
						"description": "proxy route method",
						"enum": [
							"OPTIONS",
							"PROPFIND",
							"LOCK",
							"UNLOCK",
							"PATCH",
							"TRACE",
							"GET",
							"HEAD",
							"POST",
							"PUT",
							"DELETE",
							"MKCOL",
							"COPY",
							"MOVE"
						],
						"type": "string"
					},
					"uri": {
						"minLength": 1,
						"maxLength": 4096,
						"type": "string",
						"pattern": "^\\/.*",
						"description": "new uri for upstream"
					},
					"use_real_request_uri_unsafe": {
						"default": false,
						"description": "use real_request_uri instead, THIS IS VERY UNSAFE.",
						"type": "boolean"
					},
					"regex_uri": {
						"description": "new uri that substitute from client uri for upstream, lower priority than uri property",
						"items": { "type": "string", "description": "regex uri" },
						"minItems": 2,
						"type": "array"
					},
					"headers": {
						"oneOf": [
							{
								"properties": {
									"add": {
										"type": "object",
										"patternProperties": {
											"^[^:]+$": {
												"oneOf": [{ "type": "string" }, { "type": "number" }]
											}
										},
										"minProperties": 1
									},
									"remove": {
										"items": { "pattern": "^[^:]+$", "type": "string" },
										"minItems": 1,
										"type": "array"
									},
									"set": {
										"type": "object",
										"patternProperties": {
											"^[^:]+$": {
												"oneOf": [{ "type": "string" }, { "type": "number" }]
											}
										},
										"minProperties": 1
									}
								},
								"additionalProperties": false,
								"type": "object",
								"minProperties": 1
							},
							{
								"type": "object",
								"patternProperties": {
									"^[^:]+$": {
										"oneOf": [{ "type": "string" }, { "type": "number" }]
									}
								},
								"minProperties": 1
							}
						],
						"description": "new headers for request"
					},
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					}
				},
				"$comment": "this is a mark for our injected plugin schema",
				"minProperties": 1,
				"type": "object"
			},
			"priority": 1008
		},
		"tcp-logger": {
			"version": 0.1,
			"schema": {
				"properties": {
					"tls_options": { "type": "string" },
					"host": { "type": "string" },
					"name": { "default": "tcp logger", "type": "string" },
					"inactive_timeout": { "minimum": 1, "default": 5, "type": "integer" },
					"tls": { "default": false, "type": "boolean" },
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					},
					"timeout": { "minimum": 1, "default": 1000, "type": "integer" },
					"batch_max_size": {
						"minimum": 1,
						"default": 1000,
						"type": "integer"
					},
					"max_retry_count": { "minimum": 0, "default": 0, "type": "integer" },
					"retry_delay": { "minimum": 0, "default": 1, "type": "integer" },
					"include_req_body": { "default": false, "type": "boolean" },
					"port": { "minimum": 0, "type": "integer" },
					"buffer_duration": { "minimum": 1, "default": 60, "type": "integer" },
					"log_format": { "type": "object" }
				},
				"required": ["host", "port"],
				"$comment": "this is a mark for our injected plugin schema",
				"type": "object"
			},
			"priority": 405,
			"metadata_schema": {
				"properties": {
					"log_format": {
						"default": {
							"client_ip": "$remote_addr",
							"host": "$host",
							"@timestamp": "$time_iso8601"
						},
						"type": "object"
					}
				},
				"type": "object"
			}
		},
		"fault-injection": {
			"version": 0.1,
			"schema": {
				"properties": {
					"delay": {
						"properties": {
							"percentage": { "minimum": 0, "maximum": 100, "type": "integer" },
							"duration": { "minimum": 0, "type": "number" },
							"vars": {
								"maxItems": 20,
								"items": { "type": "array" },
								"type": "array"
							}
						},
						"required": ["duration"],
						"type": "object"
					},
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					},
					"abort": {
						"properties": {
							"headers": {
								"type": "object",
								"patternProperties": {
									"^[^:]+$": {
										"oneOf": [{ "type": "string" }, { "type": "number" }]
									}
								},
								"minProperties": 1
							},
							"percentage": { "minimum": 0, "maximum": 100, "type": "integer" },
							"vars": {
								"maxItems": 20,
								"items": { "type": "array" },
								"type": "array"
							},
							"body": { "minLength": 0, "type": "string" },
							"http_status": { "minimum": 200, "type": "integer" }
						},
						"required": ["http_status"],
						"type": "object"
					}
				},
				"$comment": "this is a mark for our injected plugin schema",
				"minProperties": 1,
				"type": "object"
			},
			"priority": 11000
		},
		"api-breaker": {
			"version": 0.1,
			"schema": {
				"properties": {
					"break_response_code": {
						"minimum": 200,
						"maximum": 599,
						"type": "integer"
					},
					"break_response_body": { "type": "string" },
					"break_response_headers": {
						"items": {
							"properties": {
								"key": { "minLength": 1, "type": "string" },
								"value": { "minLength": 1, "type": "string" }
							},
							"required": ["key", "value"],
							"type": "object"
						},
						"type": "array"
					},
					"max_breaker_sec": {
						"minimum": 3,
						"default": 300,
						"type": "integer"
					},
					"unhealthy": {
						"properties": {
							"failures": { "minimum": 1, "default": 3, "type": "integer" },
							"http_statuses": {
								"items": { "minimum": 500, "maximum": 599, "type": "integer" },
								"uniqueItems": true,
								"default": [500],
								"minItems": 1,
								"type": "array"
							}
						},
						"default": { "failures": 3, "http_statuses": [500] },
						"type": "object"
					},
					"healthy": {
						"properties": {
							"successes": { "minimum": 1, "default": 3, "type": "integer" },
							"http_statuses": {
								"items": { "minimum": 200, "maximum": 499, "type": "integer" },
								"uniqueItems": true,
								"default": [200],
								"minItems": 1,
								"type": "array"
							}
						},
						"default": { "successes": 3, "http_statuses": [200] },
						"type": "object"
					},
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					}
				},
				"required": ["break_response_code"],
				"$comment": "this is a mark for our injected plugin schema",
				"type": "object"
			},
			"priority": 1005
		},
		"http-logger": {
			"version": 0.1,
			"schema": {
				"properties": {
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					},
					"buffer_duration": { "minimum": 1, "default": 60, "type": "integer" },
					"retry_delay": { "minimum": 0, "default": 1, "type": "integer" },
					"name": { "default": "http logger", "type": "string" },
					"auth_header": { "type": "string" },
					"inactive_timeout": { "minimum": 1, "default": 5, "type": "integer" },
					"max_retry_count": { "minimum": 0, "default": 0, "type": "integer" },
					"concat_method": {
						"default": "json",
						"enum": ["json", "new_line"],
						"type": "string"
					},
					"timeout": { "minimum": 1, "default": 3, "type": "integer" },
					"batch_max_size": {
						"minimum": 1,
						"default": 1000,
						"type": "integer"
					},
					"include_resp_body_expr": {
						"items": { "type": "array" },
						"minItems": 1,
						"type": "array"
					},
					"uri": {
						"pattern": "^[^\\/]+:\\/\\/([\\da-zA-Z.-]+|\\[[\\da-fA-F:]+\\])(:\\d+)?",
						"type": "string"
					},
					"include_req_body": { "default": false, "type": "boolean" },
					"include_resp_body": { "default": false, "type": "boolean" },
					"ssl_verify": { "default": false, "type": "boolean" },
					"log_format": { "type": "object" }
				},
				"required": ["uri"],
				"$comment": "this is a mark for our injected plugin schema",
				"type": "object"
			},
			"metadata_schema": {
				"properties": {
					"log_format": {
						"default": {
							"client_ip": "$remote_addr",
							"host": "$host",
							"@timestamp": "$time_iso8601"
						},
						"type": "object"
					}
				},
				"type": "object"
			},
			"priority": 410
		},
		"grpc-transcode": {
			"version": 0.1,
			"schema": {
				"additionalProperties": true,
				"properties": {
					"service": {
						"type": "string",
						"description": "the grpc service name"
					},
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					},
					"method": {
						"type": "string",
						"description": "the method name in the grpc service."
					},
					"show_status_in_body": {
						"default": false,
						"description": "show decoded grpc-status-details-bin in response body",
						"type": "boolean"
					},
					"pb_option": {
						"default": [
							"enum_as_name",
							"int64_as_number",
							"auto_default_values",
							"disable_hooks"
						],
						"items": {
							"anyOf": [
								{
									"description": "enum as result",
									"enum": [
										"int64_as_number",
										"int64_as_string",
										"int64_as_hexstring"
									],
									"type": "string"
								},
								{
									"description": "int64 as result",
									"enum": ["enum_as_name", "enum_as_value"],
									"type": "string"
								},
								{
									"description": "default values option",
									"enum": [
										"auto_default_values",
										"no_default_values",
										"use_default_values",
										"use_default_metatable"
									],
									"type": "string"
								},
								{
									"description": "hooks option",
									"enum": ["enable_hooks", "disable_hooks"],
									"type": "string"
								}
							],
							"type": "string"
						},
						"minItems": 1,
						"type": "array"
					},
					"status_detail_type": {
						"type": "string",
						"description": "the message type of the grpc-status-details-bin's details part, if not given, the details part will not be decoded"
					},
					"deadline": {
						"default": 0,
						"description": "deadline for grpc, millisecond",
						"type": "number"
					},
					"proto_id": {
						"anyOf": [
							{
								"pattern": "^[a-zA-Z0-9-_.]+$",
								"maxLength": 64,
								"minLength": 1,
								"type": "string"
							},
							{ "minimum": 1, "type": "integer" }
						]
					}
				},
				"$comment": "this is a mark for our injected plugin schema",
				"required": ["proto_id", "service", "method"],
				"type": "object"
			},
			"priority": 506
		},
		"referer-restriction": {
			"version": 0.1,
			"schema": {
				"properties": {
					"message": {
						"default": "Your referer host is not allowed",
						"maxLength": 1024,
						"minLength": 1,
						"type": "string"
					},
					"bypass_missing": { "default": false, "type": "boolean" },
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					},
					"whitelist": {
						"items": {
							"pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
							"type": "string"
						},
						"minItems": 1,
						"type": "array"
					},
					"blacklist": {
						"items": {
							"pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:]+$",
							"type": "string"
						},
						"minItems": 1,
						"type": "array"
					}
				},
				"$comment": "this is a mark for our injected plugin schema",
				"oneOf": [{ "required": ["whitelist"] }, { "required": ["blacklist"] }],
				"type": "object"
			},
			"priority": 2990
		},
		"azure-functions": {
			"version": 0.1,
			"schema": {
				"properties": {
					"timeout": { "minimum": 100, "default": 3000, "type": "integer" },
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					},
					"ssl_verify": { "default": true, "type": "boolean" },
					"authorization": {
						"properties": {
							"apikey": { "type": "string" },
							"clientid": { "type": "string" }
						},
						"type": "object"
					},
					"keepalive_pool": { "minimum": 1, "default": 5, "type": "integer" },
					"function_uri": { "type": "string" },
					"keepalive_timeout": {
						"minimum": 1000,
						"default": 60000,
						"type": "integer"
					},
					"keepalive": { "default": true, "type": "boolean" }
				},
				"required": ["function_uri"],
				"$comment": "this is a mark for our injected plugin schema",
				"type": "object"
			},
			"priority": -1900,
			"metadata_schema": {
				"properties": {
					"master_apikey": { "default": "", "type": "string" },
					"master_clientid": { "default": "", "type": "string" }
				},
				"type": "object"
			}
		},
		"gzip": {
			"version": 0.1,
			"schema": {
				"properties": {
					"min_length": { "minimum": 1, "default": 20, "type": "integer" },
					"comp_level": {
						"minimum": 1,
						"default": 1,
						"maximum": 9,
						"type": "integer"
					},
					"vary": { "type": "boolean" },
					"types": {
						"anyOf": [
							{
								"items": { "minLength": 1, "type": "string" },
								"minItems": 1,
								"type": "array"
							},
							{ "enum": ["*"] }
						],
						"default": ["text/html"]
					},
					"http_version": { "enum": [1.1, 1], "default": 1.1 },
					"buffers": {
						"properties": {
							"number": { "minimum": 1, "default": 32, "type": "integer" },
							"size": { "minimum": 1, "default": 4096, "type": "integer" }
						},
						"default": { "number": 32, "size": 4096 },
						"type": "object"
					},
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					}
				},
				"$comment": "this is a mark for our injected plugin schema",
				"type": "object"
			},
			"priority": 995
		},
		"server-info": {
			"version": 0.1,
			"schema": {
				"properties": {
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					}
				},
				"$comment": "this is a mark for our injected plugin schema",
				"type": "object"
			},
			"priority": 990,
			"scope": "global"
		},
		"degraphql": {
			"version": 0.1,
			"schema": {
				"properties": {
					"operation_name": {
						"maxLength": 1024,
						"minLength": 1,
						"type": "string"
					},
					"variables": {
						"items": { "type": "string" },
						"minItems": 1,
						"type": "array"
					},
					"query": { "maxLength": 1024, "minLength": 1, "type": "string" },
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					}
				},
				"required": ["query"],
				"$comment": "this is a mark for our injected plugin schema",
				"type": "object"
			},
			"priority": 509
		},
		"authz-casbin": {
			"version": 0.1,
			"schema": {
				"properties": {
					"model_path": { "type": "string" },
					"policy_path": { "type": "string" },
					"model": { "type": "string" },
					"policy": { "type": "string" },
					"username": { "type": "string" },
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					}
				},
				"$comment": "this is a mark for our injected plugin schema",
				"oneOf": [
					{ "required": ["model_path", "policy_path", "username"] },
					{ "required": ["model", "policy", "username"] }
				],
				"type": "object"
			},
			"priority": 2560,
			"metadata_schema": {
				"properties": {
					"model": { "type": "string" },
					"policy": { "type": "string" }
				},
				"required": ["model", "policy"],
				"type": "object"
			}
		},
		"proxy-mirror": {
			"version": 0.1,
			"schema": {
				"properties": {
					"host": {
						"pattern": "^(http(s)?|grpc(s)?):\\/\\/([\\da-zA-Z.-]+|\\[[\\da-fA-F:]+\\])(:\\d+)?$",
						"type": "string"
					},
					"path_concat_mode": {
						"default": "replace",
						"description": "the concatenation mode for custom path",
						"enum": ["replace", "prefix"],
						"type": "string"
					},
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					},
					"sample_ratio": {
						"minimum": 1e-5,
						"default": 1,
						"maximum": 1,
						"type": "number"
					},
					"path": { "pattern": "^/[^?&]+$", "type": "string" }
				},
				"required": ["host"],
				"$comment": "this is a mark for our injected plugin schema",
				"type": "object"
			},
			"priority": 1010
		},
		"limit-count": {
			"version": 0.4,
			"schema": {
				"required": ["count", "time_window"],
				"else": {
					"then": {
						"properties": {
							"redis_cluster_name": { "type": "string" },
							"redis_password": { "minLength": 0, "type": "string" },
							"redis_cluster_ssl_verify": {
								"default": false,
								"type": "boolean"
							},
							"redis_timeout": {
								"minimum": 1,
								"default": 1000,
								"type": "integer"
							},
							"redis_cluster_ssl": { "default": false, "type": "boolean" },
							"redis_cluster_nodes": {
								"items": { "maxLength": 100, "minLength": 2, "type": "string" },
								"minItems": 2,
								"type": "array"
							}
						},
						"required": ["redis_cluster_nodes", "redis_cluster_name"]
					},
					"if": { "properties": { "policy": { "enum": ["redis-cluster"] } } }
				},
				"if": { "properties": { "policy": { "enum": ["redis"] } } },
				"properties": {
					"key": { "default": "remote_addr", "type": "string" },
					"rejected_code": {
						"minimum": 200,
						"default": 503,
						"maximum": 599,
						"type": "integer"
					},
					"rejected_msg": { "minLength": 1, "type": "string" },
					"time_window": { "exclusiveMinimum": 0, "type": "integer" },
					"show_limit_quota_header": { "default": true, "type": "boolean" },
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					},
					"key_type": {
						"default": "var",
						"enum": ["var", "var_combination", "constant"],
						"type": "string"
					},
					"allow_degradation": { "default": false, "type": "boolean" },
					"count": { "exclusiveMinimum": 0, "type": "integer" },
					"group": { "type": "string" },
					"policy": {
						"default": "local",
						"enum": ["local", "redis", "redis-cluster"],
						"type": "string"
					}
				},
				"$comment": "this is a mark for our injected plugin schema",
				"then": {
					"properties": {
						"redis_username": { "minLength": 1, "type": "string" },
						"redis_password": { "minLength": 0, "type": "string" },
						"redis_database": { "minimum": 0, "default": 0, "type": "integer" },
						"redis_timeout": {
							"minimum": 1,
							"default": 1000,
							"type": "integer"
						},
						"redis_ssl": { "default": false, "type": "boolean" },
						"redis_ssl_verify": { "default": false, "type": "boolean" },
						"redis_host": { "minLength": 2, "type": "string" },
						"redis_port": { "minimum": 1, "default": 6379, "type": "integer" }
					},
					"required": ["redis_host"]
				},
				"type": "object"
			},
			"priority": 1002
		},
		"kafka-proxy": {
			"version": 0.1,
			"schema": {
				"properties": {
					"sasl": {
						"properties": {
							"username": { "type": "string" },
							"password": { "type": "string" }
						},
						"required": ["username", "password"],
						"type": "object"
					},
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					}
				},
				"$comment": "this is a mark for our injected plugin schema",
				"encrypt_fields": ["sasl.password"],
				"type": "object"
			},
			"priority": 508
		},
		"serverless-pre-function": {
			"version": 0.1,
			"schema": {
				"properties": {
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					},
					"phase": {
						"default": "access",
						"enum": [
							"rewrite",
							"access",
							"header_filter",
							"body_filter",
							"log",
							"before_proxy"
						],
						"type": "string"
					},
					"functions": {
						"items": { "type": "string" },
						"minItems": 1,
						"type": "array"
					}
				},
				"required": ["functions"],
				"$comment": "this is a mark for our injected plugin schema",
				"type": "object"
			},
			"priority": 10000
		},
		"request-id": {
			"version": 0.1,
			"schema": {
				"properties": {
					"include_in_response": { "default": true, "type": "boolean" },
					"algorithm": {
						"default": "uuid",
						"enum": ["uuid", "nanoid", "range_id"],
						"type": "string"
					},
					"range_id": {
						"properties": {
							"char_set": {
								"default": "abcdefghijklmnopqrstuvwxyzABCDEFGHIGKLMNOPQRSTUVWXYZ0123456789",
								"minLength": 6,
								"type": "string"
							},
							"length": { "minimum": 6, "default": 16, "type": "integer" }
						},
						"default": {},
						"type": "object"
					},
					"header_name": { "default": "X-Request-Id", "type": "string" },
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					}
				},
				"$comment": "this is a mark for our injected plugin schema",
				"type": "object"
			},
			"priority": 12015
		},
		"ext-plugin-post-resp": {
			"version": 0.1,
			"schema": {
				"properties": {
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					},
					"allow_degradation": { "default": false, "type": "boolean" },
					"conf": {
						"items": {
							"properties": {
								"value": { "type": "string" },
								"name": { "type": "string", "minLength": 1, "maxLength": 128 }
							},
							"required": ["name", "value"],
							"type": "object"
						},
						"minItems": 1,
						"type": "array"
					}
				},
				"$comment": "this is a mark for our injected plugin schema",
				"type": "object"
			},
			"priority": -4000
		},
		"chaitin-waf": {
			"version": 0.1,
			"schema": {
				"properties": {
					"append_waf_debug_header": { "default": false, "type": "boolean" },
					"match": {
						"items": {
							"properties": { "vars": { "type": "array" } },
							"type": "object"
						},
						"type": "array"
					},
					"config": {
						"properties": {
							"req_body_size": { "type": "integer" },
							"read_timeout": { "type": "integer" },
							"keepalive_timeout": { "type": "integer" },
							"send_timeout": { "type": "integer" },
							"keepalive_size": { "type": "integer" },
							"connect_timeout": { "type": "integer" }
						},
						"type": "object"
					},
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					},
					"append_waf_resp_header": { "default": true, "type": "boolean" }
				},
				"$comment": "this is a mark for our injected plugin schema",
				"type": "object"
			},
			"metadata_schema": {
				"properties": {
					"nodes": {
						"items": {
							"properties": {
								"port": { "minimum": 1, "default": 80, "type": "integer" },
								"host": {
									"pattern": "^\\*?[0-9a-zA-Z-._\\[\\]:/]+$",
									"type": "string"
								}
							},
							"required": ["host"],
							"type": "object"
						},
						"minItems": 1,
						"type": "array"
					},
					"config": {
						"properties": {
							"req_body_size": { "default": 1024, "type": "integer" },
							"read_timeout": { "default": 1000, "type": "integer" },
							"keepalive_timeout": { "default": 60000, "type": "integer" },
							"send_timeout": { "default": 1000, "type": "integer" },
							"keepalive_size": { "default": 256, "type": "integer" },
							"connect_timeout": { "default": 1000, "type": "integer" }
						},
						"default": {},
						"type": "object"
					}
				},
				"required": ["nodes"],
				"type": "object"
			},
			"priority": 2700
		},
		"file-logger": {
			"version": 0.1,
			"schema": {
				"properties": {
					"include_resp_body_expr": {
						"items": { "type": "array" },
						"minItems": 1,
						"type": "array"
					},
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					},
					"match": {
						"maxItems": 20,
						"items": { "type": "array" },
						"type": "array"
					},
					"include_resp_body": { "default": false, "type": "boolean" },
					"log_format": { "type": "object" },
					"path": { "type": "string" }
				},
				"required": ["path"],
				"$comment": "this is a mark for our injected plugin schema",
				"type": "object"
			},
			"metadata_schema": {
				"properties": {
					"log_format": {
						"default": {
							"client_ip": "$remote_addr",
							"host": "$host",
							"@timestamp": "$time_iso8601"
						},
						"type": "object"
					}
				},
				"type": "object"
			},
			"priority": 399
		},
		"jwt-auth": {
			"consumer_schema": {
				"required": ["key"],
				"properties": {
					"key": { "type": "string" },
					"algorithm": {
						"default": "HS256",
						"enum": ["HS256", "HS512", "RS256", "ES256"],
						"type": "string"
					},
					"base64_secret": { "default": false, "type": "boolean" },
					"exp": { "minimum": 1, "default": 86400, "type": "integer" },
					"secret": { "type": "string" },
					"lifetime_grace_period": {
						"minimum": 0,
						"default": 0,
						"type": "integer"
					}
				},
				"dependencies": {
					"algorithm": {
						"oneOf": [
							{
								"properties": {
									"algorithm": {
										"enum": ["HS256", "HS512"],
										"default": "HS256"
									}
								}
							},
							{
								"properties": {
									"private_key": { "type": "string" },
									"algorithm": { "enum": ["RS256", "ES256"] },
									"public_key": { "type": "string" }
								},
								"required": ["public_key", "private_key"]
							}
						]
					}
				},
				"encrypt_fields": ["secret", "private_key"],
				"type": "object"
			},
			"version": 0.1,
			"schema": {
				"properties": {
					"header": { "default": "authorization", "type": "string" },
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					},
					"query": { "default": "jwt", "type": "string" },
					"cookie": { "default": "jwt", "type": "string" },
					"hide_credentials": { "default": false, "type": "boolean" }
				},
				"$comment": "this is a mark for our injected plugin schema",
				"type": "object"
			},
			"type": "auth",
			"priority": 2510
		},
		"tencent-cloud-cls": {
			"version": 0.1,
			"schema": {
				"required": ["cls_host", "cls_topic", "secret_id", "secret_key"],
				"properties": {
					"secret_key": { "type": "string" },
					"batch_max_size": {
						"minimum": 1,
						"default": 1000,
						"type": "integer"
					},
					"retry_delay": { "minimum": 0, "default": 1, "type": "integer" },
					"name": { "default": "tencent-cloud-cls", "type": "string" },
					"buffer_duration": { "minimum": 1, "default": 60, "type": "integer" },
					"inactive_timeout": { "minimum": 1, "default": 5, "type": "integer" },
					"max_retry_count": { "minimum": 0, "default": 0, "type": "integer" },
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					},
					"global_tag": { "type": "object" },
					"cls_host": { "type": "string" },
					"cls_topic": { "type": "string" },
					"secret_id": { "type": "string" },
					"include_req_body": { "default": false, "type": "boolean" },
					"include_resp_body": { "default": false, "type": "boolean" },
					"sample_ratio": {
						"minimum": 1e-5,
						"default": 1,
						"maximum": 1,
						"type": "number"
					},
					"log_format": { "type": "object" }
				},
				"$comment": "this is a mark for our injected plugin schema",
				"encrypt_fields": ["secret_key"],
				"type": "object"
			},
			"metadata_schema": {
				"properties": {
					"log_format": {
						"default": {
							"client_ip": "$remote_addr",
							"host": "$host",
							"@timestamp": "$time_iso8601"
						},
						"type": "object"
					}
				},
				"type": "object"
			},
			"priority": 397
		},
		"inspect": {
			"version": 0.1,
			"schema": {
				"properties": {
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					}
				},
				"$comment": "this is a mark for our injected plugin schema",
				"type": "object"
			},
			"priority": 200
		},
		"sls-logger": {
			"version": 0.1,
			"schema": {
				"required": [
					"host",
					"port",
					"project",
					"logstore",
					"access_key_id",
					"access_key_secret"
				],
				"properties": {
					"project": { "type": "string" },
					"host": { "type": "string" },
					"access_key_id": { "type": "string" },
					"access_key_secret": { "type": "string" },
					"buffer_duration": { "minimum": 1, "default": 60, "type": "integer" },
					"inactive_timeout": { "minimum": 1, "default": 5, "type": "integer" },
					"name": { "default": "sls-logger", "type": "string" },
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					},
					"timeout": { "minimum": 1, "default": 5000, "type": "integer" },
					"batch_max_size": {
						"minimum": 1,
						"default": 1000,
						"type": "integer"
					},
					"max_retry_count": { "minimum": 0, "default": 0, "type": "integer" },
					"retry_delay": { "minimum": 0, "default": 1, "type": "integer" },
					"include_req_body": { "default": false, "type": "boolean" },
					"port": { "type": "integer" },
					"logstore": { "type": "string" },
					"log_format": { "type": "object" }
				},
				"$comment": "this is a mark for our injected plugin schema",
				"encrypt_fields": ["access_key_secret"],
				"type": "object"
			},
			"priority": 406
		},
		"syslog": {
			"version": 0.1,
			"schema": {
				"properties": {
					"host": { "type": "string" },
					"tls": { "default": false, "type": "boolean" },
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					},
					"timeout": { "minimum": 1, "default": 3000, "type": "integer" },
					"batch_max_size": {
						"minimum": 1,
						"default": 1000,
						"type": "integer"
					},
					"max_retry_count": { "minimum": 0, "default": 0, "type": "integer" },
					"retry_delay": { "minimum": 0, "default": 1, "type": "integer" },
					"buffer_duration": { "minimum": 1, "default": 60, "type": "integer" },
					"port": { "type": "integer" },
					"name": { "default": "sys logger", "type": "string" },
					"inactive_timeout": { "minimum": 1, "default": 5, "type": "integer" },
					"flush_limit": { "minimum": 1, "default": 4096, "type": "integer" },
					"drop_limit": { "default": 1048576, "type": "integer" },
					"include_req_body": { "default": false, "type": "boolean" },
					"sock_type": {
						"default": "tcp",
						"enum": ["tcp", "udp"],
						"type": "string"
					},
					"pool_size": { "minimum": 5, "default": 5, "type": "integer" },
					"log_format": { "type": "object" }
				},
				"required": ["host", "port"],
				"$comment": "this is a mark for our injected plugin schema",
				"type": "object"
			},
			"metadata_schema": {
				"properties": {
					"log_format": {
						"default": {
							"client_ip": "$remote_addr",
							"host": "$host",
							"@timestamp": "$time_iso8601"
						},
						"type": "object"
					}
				},
				"type": "object"
			},
			"priority": 401
		},
		"serverless-post-function": {
			"version": 0.1,
			"schema": {
				"properties": {
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					},
					"phase": {
						"default": "access",
						"enum": [
							"rewrite",
							"access",
							"header_filter",
							"body_filter",
							"log",
							"before_proxy"
						],
						"type": "string"
					},
					"functions": {
						"items": { "type": "string" },
						"minItems": 1,
						"type": "array"
					}
				},
				"required": ["functions"],
				"$comment": "this is a mark for our injected plugin schema",
				"type": "object"
			},
			"priority": -2000
		},
		"hmac-auth": {
			"consumer_schema": {
				"required": ["access_key", "secret_key"],
				"title": "work with consumer object",
				"properties": {
					"secret_key": { "maxLength": 256, "minLength": 1, "type": "string" },
					"clock_skew": { "default": 0, "type": "integer" },
					"signed_headers": {
						"items": { "maxLength": 50, "minLength": 1, "type": "string" },
						"type": "array"
					},
					"keep_headers": {
						"default": false,
						"title": "whether to keep the http request header",
						"type": "boolean"
					},
					"algorithm": {
						"default": "hmac-sha256",
						"enum": ["hmac-sha1", "hmac-sha256", "hmac-sha512"],
						"type": "string"
					},
					"validate_request_body": {
						"default": false,
						"title": "A boolean value telling the plugin to enable body validation",
						"type": "boolean"
					},
					"max_req_body": {
						"default": 524288,
						"title": "Max request body size",
						"type": "integer"
					},
					"access_key": { "maxLength": 256, "minLength": 1, "type": "string" },
					"encode_uri_params": {
						"default": true,
						"title": "Whether to escape the uri parameter",
						"type": "boolean"
					}
				},
				"encrypt_fields": ["secret_key"],
				"type": "object"
			},
			"version": 0.1,
			"schema": {
				"properties": {
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					}
				},
				"$comment": "this is a mark for our injected plugin schema",
				"title": "work with route or service object",
				"type": "object"
			},
			"type": "auth",
			"priority": 2530
		}
	},
	"stream_plugins": {
		"syslog": {
			"version": 0.1,
			"schema": {
				"properties": {
					"max_retry_count": { "minimum": 0, "default": 0, "type": "integer" },
					"host": { "type": "string" },
					"retry_delay": { "minimum": 0, "default": 1, "type": "integer" },
					"name": { "default": "stream sys logger", "type": "string" },
					"buffer_duration": { "minimum": 1, "default": 60, "type": "integer" },
					"inactive_timeout": { "minimum": 1, "default": 5, "type": "integer" },
					"tls": { "default": false, "type": "boolean" },
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					},
					"timeout": { "minimum": 1, "default": 3000, "type": "integer" },
					"batch_max_size": {
						"minimum": 1,
						"default": 1000,
						"type": "integer"
					},
					"flush_limit": { "minimum": 1, "default": 4096, "type": "integer" },
					"drop_limit": { "default": 1048576, "type": "integer" },
					"sock_type": {
						"default": "tcp",
						"enum": ["tcp", "udp"],
						"type": "string"
					},
					"port": { "type": "integer" },
					"pool_size": { "minimum": 5, "default": 5, "type": "integer" },
					"log_format": { "type": "object" }
				},
				"required": ["host", "port"],
				"$comment": "this is a mark for our injected plugin schema",
				"type": "object"
			},
			"metadata_schema": {
				"properties": {
					"log_format": {
						"default": {
							"client_ip": "$remote_addr",
							"host": "$host",
							"@timestamp": "$time_iso8601"
						},
						"type": "object"
					}
				},
				"type": "object"
			},
			"priority": 401
		},
		"mqtt-proxy": {
			"version": 0.1,
			"schema": {
				"properties": {
					"protocol_name": { "type": "string" },
					"protocol_level": { "type": "integer" },
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					}
				},
				"required": ["protocol_name", "protocol_level"],
				"$comment": "this is a mark for our injected plugin schema",
				"type": "object"
			},
			"priority": 1000
		},
		"limit-conn": {
			"version": 0.1,
			"schema": {
				"properties": {
					"key": { "type": "string" },
					"conn": { "exclusiveMinimum": 0, "type": "integer" },
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					},
					"key_type": {
						"default": "var",
						"enum": ["var", "var_combination"],
						"type": "string"
					},
					"burst": { "minimum": 0, "type": "integer" },
					"default_conn_delay": { "exclusiveMinimum": 0, "type": "number" },
					"only_use_default_delay": { "default": false, "type": "boolean" }
				},
				"required": ["conn", "burst", "default_conn_delay", "key"],
				"$comment": "this is a mark for our injected plugin schema",
				"type": "object"
			},
			"priority": 1003
		},
		"ip-restriction": {
			"version": 0.1,
			"schema": {
				"properties": {
					"message": {
						"default": "Your IP address is not allowed",
						"maxLength": 1024,
						"minLength": 1,
						"type": "string"
					},
					"_meta": {
						"properties": {
							"error_response": {
								"oneOf": [{ "type": "string" }, { "type": "object" }]
							},
							"disable": { "type": "boolean" },
							"filter": {
								"type": "array",
								"description": "filter determines whether the plugin needs to be executed at runtime"
							},
							"priority": {
								"type": "integer",
								"description": "priority of plugins by customized order"
							}
						},
						"type": "object"
					},
					"whitelist": {
						"items": {
							"anyOf": [
								{ "format": "ipv4", "title": "IPv4", "type": "string" },
								{
									"pattern": "^([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])/([12]?[0-9]|3[0-2])$",
									"title": "IPv4/CIDR",
									"type": "string"
								},
								{ "format": "ipv6", "title": "IPv6", "type": "string" },
								{
									"pattern": "^([a-fA-F0-9]{0,4}:){1,8}(:[a-fA-F0-9]{0,4}){0,8}([a-fA-F0-9]{0,4})?/[0-9]{1,3}$",
									"title": "IPv6/CIDR",
									"type": "string"
								}
							]
						},
						"minItems": 1,
						"type": "array"
					},
					"blacklist": {
						"items": {
							"anyOf": [
								{ "format": "ipv4", "title": "IPv4", "type": "string" },
								{
									"pattern": "^([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])/([12]?[0-9]|3[0-2])$",
									"title": "IPv4/CIDR",
									"type": "string"
								},
								{ "format": "ipv6", "title": "IPv6", "type": "string" },
								{
									"pattern": "^([a-fA-F0-9]{0,4}:){1,8}(:[a-fA-F0-9]{0,4}){0,8}([a-fA-F0-9]{0,4})?/[0-9]{1,3}$",
									"title": "IPv6/CIDR",
									"type": "string"
								}
							]
						},
						"minItems": 1,
						"type": "array"
					}
				},
				"$comment": "this is a mark for our injected plugin schema",
				"oneOf": [{ "required": ["whitelist"] }, { "required": ["blacklist"] }],
				"type": "object"
			},
			"priority": 3000
		}
	}
}
